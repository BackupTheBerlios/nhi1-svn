#+
#:  \file       theLink/tests/acut.test
#:  \brief      \$Id$
#:  
#:  (C) 2002 - NHI - #1 - Project - Group
#:  
#:  \version    \$Rev$
#:  \author     EMail: aotto1968 at users.berlios.de
#:  \attention  this software has GPL permissions to copy
#:              please contact AUTHORS for additional information
#:

if {[info exists env(TS_LIBRARY)]} {
  source $env(TS_LIBRARY)
} else {
  source [file join [file dirname [info script]] library.tcl]
}

SetConstraints all

if {$env(USE_REMOTE) || ![testConstraint c]} return

##
## -----------------------------------------------------------------------
## init
##

set data1 [makeFile {xa:24:12345678987654321:5.78
cg:89:98765432123456789:3.46} [pid].dat]

 # start-type: fork, thread or spawn
  foreach S [getEnv START_LST] {

test acut-4-($S) {simple cut} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut @ join -d , } \
    -returnCodes ok \
    -match glob \
    -result {CHILDSTATUS-1-S> (cut) \[CutCreate] option argument '-f' is required
S> (cut) found in function "CutCreate" at file "acut.c"
S> (cut) use '-h' or '--help' for usage*}

test acut-5-($S) {cut help} \
    -body   { Exec {*}[getATool cut] --help } \
    -returnCodes ok \
    -result {NONE--usage: cut [OPTION]... [ARGUMENT]...

  The cut tool works as a filter between a msgque client and a msgque server
  using the option '-f' to extract columns.

  cut [ARGUMENT]... syntax:
    aclient [OPTION]... @ cut [OPTION]... @ [ARGUMENT]...

  msgque [OPTION]:
    --help-msgque    print msgque specific help

  cut [OPTION]:
    -f NUM...        the column number(s)  (default: 'empty')
      NUM            a single column with '0' < NUM < '255'
      NUM1,NUM2      multiple columns, use ',' as delimiter
      NUM1-NUM2      multiple columns, from NUM1 up to NUM2
      NUM-           multiple columns, from NUM up to the end
      -NUM           multiple columns, from the beginn up to NUM
    -h, --help       print this help
}

test acut-6-($S) {cut: -f 1,3} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f 1,3 @ join -d , } \
    -returnCodes ok \
    -result {24,5.78
89,3.46}

test acut-7-($S) {cut: -f 1-3} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f 1-3 @ join -d , } \
    -returnCodes ok \
    -result {24,12345678987654321,5.78
89,98765432123456789,3.46}

test acut-8-($S) {cut: -f 2-} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f 2- @ join -d , } \
    -returnCodes ok \
    -result {12345678987654321,5.78
98765432123456789,3.46}

test acut-9-($S) {cut: -f -2} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f -2 @ join -d , } \
    -returnCodes ok \
    -result {xa,24,12345678987654321
cg,89,98765432123456789}

test acut-9b-($S) {cut: -f -2 + sort} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f -2 @ sort -0 C @ join -d , } \
    -returnCodes ok \
    -result {cg,89,98765432123456789
xa,24,12345678987654321}

test acut-10-($S) {cut: -f nothing } \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f @ join -d , } \
    -returnCodes ok \
    -match glob \
    -result {CHILDSTATUS-1-S> (cut) \[CutCreate] option argument '-f' is required
S> (cut) found in function "CutCreate" at file "acut.c"
S> (cut) use '-h' or '--help' for usage*}

test acut-11-($S) {cut: -f wrong number } \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f otto @ join -d , } \
    -returnCodes ok \
    -match glob \
    -result {CHILDSTATUS-1-S> (cut) \[CutCreate] invalid field character 'o' found, only 'NUMBER', ',' or '-' are allowed
S> (cut) found in function "CutCreate" at file "acut.c"
S> (cut) use '-h' or '--help' for usage*}

test acut-12-($S) {cut: no server} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f 0 } \
    -returnCodes ok \
    -match glob \
    -result {CHILDSTATUS-220-C> (split) \[service-call-error] <Tok|+FTR> <Num|220>
S> (cut) \[MqServiceGetFilter] no filter is available*}

test acut-13-($S) {cut: no client} \
    -body   { Exec {*}[getATool cut] -f 0 @ join -d , } \
    -returnCodes ok \
    -result {CHILDSTATUS-201-S> (cut) [PipeCreate] it is not allowed to use a server in a client context
S> (cut) found in function "pIoCreate" at file "io.c"
S> (cut) found in function "MqLinkCreate" at file "link.c"
S> (cut) found in function "CutCreate" at file "acut.c"
S> (cut) use '-h' or '--help' for usage}

test acut-14-($S) {cut: forward +FTR error} \
    -body   { Exec cat $data1 | {*}[getATool split] --$S -d : @ cut -f 0-1 @ join -0 "id=%-5i" -1 "%-10s" -d "+++"} \
    -returnCodes ok \
    -match  glob \
    -result {CHILDSTATUS-1-C> (split) \[service-call-error] <Tok|+FTR> <Num|1>
C> (cut) \[service-call-error] <Tok|+FTR> <Num|1>
S> (join) \[pBufferGetA4] size ERROR, can not convert 'xa' into an 'INT' object*}

    } ; ## START_LST

##
## -----------------------------------------------------------------------
## finish
##
    
freeTests

# vim: set syn=tcl:
