#!/bin/bash

## template definition
man=@abs_srcdir@/man/local.generic
libmsgque_private=@abs_srcdir@/man/Doxyfile.msgque
ccmsgque_private=@abs_srcdir@/man/Doxyfile.msgque
javamsgque_private=@abs_srcdir@/man/Doxyfile.msgque
pymsgque_private=@abs_srcdir@/man/Doxyfile.msgque
rubymsgque_private=@abs_srcdir@/man/Doxyfile.msgque
tclmsgque_private=@abs_srcdir@/man/Doxyfile.msgque
msgqueforphp_private=@abs_srcdir@/man/Doxyfile.msgque

main=@abs_srcdir@/man/Doxyfile.msgque

libmsgque=@abs_srcdir@/libmsgque_public/Doxyfile
javamsgque=@abs_srcdir@/javamsgque_public/Doxyfile
ccmsgque=@abs_srcdir@/ccmsgque_public/Doxyfile
csmsgque=@abs_srcdir@/csmsgque_public/Doxyfile
gomsgque=@abs_srcdir@/libmsgque_public/Doxyfile
vbmsgque=@abs_srcdir@/csmsgque_public/Doxyfile
perlmsgque=@abs_srcdir@/libmsgque_public/Doxyfile
msgqueforphp=@abs_srcdir@/libmsgque_public/Doxyfile
pymsgque=@abs_srcdir@/libmsgque_public/Doxyfile
rubymsgque=@abs_srcdir@/libmsgque_public/Doxyfile
tclmsgque=@abs_srcdir@/libmsgque_public/Doxyfile

export HAVE_DOT=NO
[[ $1 == "-usedot" && ! -z '@DOT@' ]] && {
    HAVE_DOT=YES
    shift
}
[[ $1 == "-release" ]] && {
    RELEASE=YES
    shift
}
(( $# < 1 )) && {
    echo "usage: $(basename $0) [-usedot] [ALL|DIRECTORIES...]" 1>&2
    exit 1
}
[[ -z '@DOXYGEN@' ]] && {
    echo ERROR: no 'doxygen' support available 2>&1
    exit 1
}

[[ $1 == "ALL" ]] && {
    set -- @abs_srcdir@/man @abs_srcdir@/*_private @abs_srcdir@/main
    #set -- @abs_srcdir@/main
}

## customizing
  export  SRCDIR='@abs_top_srcdir@/theLink'
  export  TOPSRCDIR='@abs_top_srcdir@'
  export  BUILDDIR='@abs_top_builddir@/theLink'
  export  VERSION='@LIBMSGQUE_VERSION@'
  export  PERL_PATH='@DOXYPERL@'
  export  DOT_PATH="$(dirname '@DOT@')"
  export  GENERATE_MAN='NO' 
  export  GENERATE_RTF='NO' 
  export  GENERATE_XML='NO' 
  export  GENERATE_HTMLHELP='NO' 
  export  GENERATE_CHI='NO' 
  export  GENERATE_HTML='YES' 
  export  GENERATE_LATEX='NO' 
  if [[ "$RELEASE" == "YES" ]] ; then
    export  HTML_FOOTER="../footer.html"
  else
    export  HTML_FOOTER=""
  fi

set -xv

## Main
(
  for D
  do
    echo "======================================================================="
    if test -f $D ; then
      FN=$D
      D=$(dirname $D)
    else
      FN="$D/Doxyfile*"
    fi
    pushd $D || {
      echo ERROR: $1 is no directory
      exit 2
    }
    shift
    D=$(basename $D)

  ## search and generate the files
    for F in $FN ; do
      test ! -f $F && continue
      P=$(basename $F)
      P="${P##*.}"
      test "$F" == "$P" && P="$(basename $PWD)"
      test "$D" == "$P" && D=dummy
      echo "#########################################################################"
      echo "start: $F"
      export  PROJECT="$P"
      export  DOCDIR="@abs_top_srcdir@/html/theLink/$PROJECT"
      echo "PROJECT: $PROJECT"
      echo "DOCDIR: $DOCDIR"
      rm -fr "$DOCDIR"
      mkdir -p "$DOCDIR"
      #echo "cat @abs_srcdir@/Doxyfile.generic ${!D} ${!P} $F | @DOXYGEN@"
      cat "@abs_srcdir@/Doxyfile.generic" ${!D} ${!P} "$F" | "@DOXYGEN@" - 2>&1
    done

    popd
  done
)

