.TH "Mq_Error_CC_API" n "10 Jan 2010" "Version 4.1" "ccmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Mq_Error_CC_API \- create and manage error messages.   

.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorC\fP (\fBMQ_CST\fP const prefix, \fBMQ_INT\fP const errnum, \fBMQ_CST\fP const message)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorC\fP "
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorV\fP (\fBMQ_CST\fP const prefix, \fBMQ_INT\fP const errnum, \fBMQ_CST\fP const fmt,...)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorV\fP "
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorRaise\fP ()  throw (MqCException)"
.br
.R "throw an javamsgque.MqCException using the data from \fBMqErrorS\fP "
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorReset\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorReset\fP "
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorPrint\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorPrint\fP "
.ti -1c
.RI "void \fBccmsgque::MqC::ErrorSetCONTINUE\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorSetCONTINUE\fP "
.ti -1c
.RI "int \fBccmsgque::MqC::ErrorGetNum\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorGetNum\fP "
.ti -1c
.RI "\fBMQ_CST\fP \fBccmsgque::MqC::ErrorGetText\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorGetText\fP "
.ti -1c
.RI "enum \fBMqErrorE\fP \fBccmsgque::MqC::ErrorSet\fP (const exception &e)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorSet\fP "
.in -1c
.SH "Detailed Description"
.PP 
create and manage error messages.  

create and manage error messages. 
.PP
the management is done with a \fBMqErrorS\fP object created by \fBMqContextCreate\fP. every \fBMqS\fP object is linked with only one \fBMqErrorS\fP object and every \fBMqErrorS\fP object is linked with only one \fBMqS\fP object. the \fBMqErrorS\fP object is used to collect all data needed to handle an error.  
.SH "Function Documentation"
.PP 
.SS "void ccmsgque::MqC::ErrorC (\fBMQ_CST\fP const  prefix, \fBMQ_INT\fP const  errnum, \fBMQ_CST\fP const  message)\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorC\fP 
.PP
Definition at line 457 of file ccmsgque.h.
.SS "int ccmsgque::MqC::ErrorGetNum ()\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorGetNum\fP 
.PP
Definition at line 490 of file ccmsgque.h.
.SS "\fBMQ_CST\fP ccmsgque::MqC::ErrorGetText ()\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorGetText\fP 
.PP
Definition at line 495 of file ccmsgque.h.
.SS "void ccmsgque::MqC::ErrorPrint ()\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorPrint\fP 
.PP
Definition at line 480 of file ccmsgque.h.
.SS "void ccmsgque::MqC::ErrorRaise ()  throw (MqCException)\fC [inline, inherited]\fP"
.PP
throw an javamsgque.MqCException using the data from \fBMqErrorS\fP 
.PP
Definition at line 470 of file ccmsgque.h.
.SS "void ccmsgque::MqC::ErrorReset ()\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorReset\fP 
.PP
Definition at line 475 of file ccmsgque.h.
.SS "enum \fBMqErrorE\fP ccmsgque::MqC::ErrorSet (const exception & e)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorSet\fP 
.PP
.SS "void ccmsgque::MqC::ErrorSetCONTINUE ()\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorSetCONTINUE\fP 
.PP
Definition at line 485 of file ccmsgque.h.
.SS "void ccmsgque::MqC::ErrorV (\fBMQ_CST\fP const  prefix, \fBMQ_INT\fP const  errnum, \fBMQ_CST\fP const  fmt,  ...)\fC [inline, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorV\fP 
.PP
Definition at line 462 of file ccmsgque.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for ccmsgque from the source code.
