.TH "Mq_Send_Cs_API" n "14 Jan 2010" "Version 4.2" "vbmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Mq_Send_Cs_API \- construct an outgoing \fIsend-data-package\fP.   

.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcsmsgque::MqS.SendSTART\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendSTART\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendEND\fP (string token)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendEND\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendEND_AND_WAIT\fP (string token, long timeout)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendEND_AND_WAIT\fP (string token)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendEND_AND_CALLBACK\fP (string token, Callback call)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendEND_AND_CALLBACK\fP (string token, IService call)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendRETURN\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendRETURN\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendERROR\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendERROR\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendY\fP (byte val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendY\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendO\fP (bool val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendO\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendS\fP (short val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendS\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendI\fP (int val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendI\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendF\fP (float val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendF\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendW\fP (long val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendW\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendD\fP (double val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendD\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendB\fP (byte[] val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendB\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendN\fP (byte[] val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendN\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendBDY\fP (byte[] val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendBDY\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendU\fP (\fBMqBufferS\fP buffer)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendU\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendC\fP (string val)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendC\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendL_START\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendL_START\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.SendL_END\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqSendL_END\fP "
.in -1c
.SH "Detailed Description"
.PP 
construct an outgoing \fIsend-data-package\fP.  

\fISending\fP data is an active task and the opposite of \fIreading\fP data which is an passive task. Active mean that the \fIsend\fP is triggered by the software-work-flow or the user. There is one \fIsend\fP function for every basic type defined in \fBTYPE IDENTIFIER\fP plus a couple of help functions. 
.PP
\fBAttention:\fP
.RS 4
Sending data is an atomic task and should not be split. Only one \fIsend-data-package\fP is always in duty. As basic rule do the processing first and send all the data afterwards. If the function \fBSendEND_AND_WAIT\fP is used the application enter the event-loop and is still able to work on other client/server links. 
.RE
.PP
 
.SH "Function Documentation"
.PP 
.SS "void csmsgque.MqS.SendB (byte[] val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendB\fP 
.PP
Definition at line 159 of file send.cs.
.SS "void csmsgque.MqS.SendBDY (byte[] val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendBDY\fP 
.PP
Definition at line 169 of file send.cs.
.SS "void csmsgque.MqS.SendC (string val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendC\fP 
.PP
Definition at line 179 of file send.cs.
.SS "void csmsgque.MqS.SendD (double val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendD\fP 
.PP
Definition at line 154 of file send.cs.
.SS "void csmsgque.MqS.SendEND (string token)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendEND\fP 
.PP
Definition at line 87 of file send.cs.
.SS "void csmsgque.MqS.SendEND_AND_CALLBACK (string token, \fBIService\fP call)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP 
.PP
Definition at line 108 of file send.cs.
.SS "void csmsgque.MqS.SendEND_AND_CALLBACK (string token, Callback call)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP 
.PP
Definition at line 102 of file send.cs.
.SS "void csmsgque.MqS.SendEND_AND_WAIT (string token)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP 
.PP
Definition at line 97 of file send.cs.
.SS "void csmsgque.MqS.SendEND_AND_WAIT (string token, long timeout)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP 
.PP
Definition at line 92 of file send.cs.
.SS "void csmsgque.MqS.SendERROR ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendERROR\fP 
.PP
Definition at line 119 of file send.cs.
.SS "void csmsgque.MqS.SendF (float val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendF\fP 
.PP
Definition at line 144 of file send.cs.
.SS "void csmsgque.MqS.SendI (int val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendI\fP 
.PP
Definition at line 139 of file send.cs.
.SS "void csmsgque.MqS.SendL_END ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendL_END\fP 
.PP
Definition at line 189 of file send.cs.
.SS "void csmsgque.MqS.SendL_START ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendL_START\fP 
.PP
Definition at line 184 of file send.cs.
.SS "void csmsgque.MqS.SendN (byte[] val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendN\fP 
.PP
Definition at line 164 of file send.cs.
.SS "void csmsgque.MqS.SendO (bool val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendO\fP 
.PP
Definition at line 129 of file send.cs.
.SS "void csmsgque.MqS.SendRETURN ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendRETURN\fP 
.PP
Definition at line 114 of file send.cs.
.SS "void csmsgque.MqS.SendS (short val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendS\fP 
.PP
Definition at line 134 of file send.cs.
.SS "void csmsgque.MqS.SendSTART ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendSTART\fP 
.PP
Definition at line 82 of file send.cs.
.SS "void csmsgque.MqS.SendU (\fBMqBufferS\fP buffer)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendU\fP 
.PP
Definition at line 174 of file send.cs.
.SS "void csmsgque.MqS.SendW (long val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendW\fP 
.PP
Definition at line 149 of file send.cs.
.SS "void csmsgque.MqS.SendY (byte val)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqSendY\fP 
.PP
Definition at line 124 of file send.cs.
.SH "Author"
.PP 
Generated automatically by Doxygen for vbmsgque from the source code.
