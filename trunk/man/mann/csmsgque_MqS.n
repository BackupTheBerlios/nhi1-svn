.TH "csmsgque::MqS" n "Tue Jan 11 2011" "Version 4.8" "vbmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
csmsgque::MqS \- 
.PP
implement the \fBlibmsgque\fP API object: \fBMqS\fP  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBProcData\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBSTART\fP { \fBDEFAULT\fP =  0, \fBFORK\fP =  1, \fBTHREAD\fP =  2, \fBSPAWN\fP =  3 }"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqStartE\fP \fP"
.ti -1c
.RI "enum \fBWAIT\fP { \fBNO\fP =  0, \fBONCE\fP =  1, \fBFOREVER\fP =  2 }"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqWaitOnEventE\fP \fP"
.ti -1c
.RI "enum \fBTIMEOUT\fP { \fBDEFAULT\fP =  -1, \fBUSER\fP =  -2, \fBMAX\fP =  -3 }"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: timeout default values \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBConfigSetName\fP (string data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetName\fP \fP"
.ti -1c
.RI "void \fBConfigSetSrvName\fP (string data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetSrvName\fP \fP"
.ti -1c
.RI "void \fBConfigSetBuffersize\fP (int data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetBuffersize\fP \fP"
.ti -1c
.RI "void \fBConfigSetDebug\fP (int data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetDebug\fP \fP"
.ti -1c
.RI "void \fBConfigSetTimeout\fP (long data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetTimeout\fP \fP"
.ti -1c
.RI "void \fBConfigSetIsSilent\fP (bool data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIsSilent\fP \fP"
.ti -1c
.RI "void \fBConfigSetIsServer\fP (bool data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIsServer\fP \fP"
.ti -1c
.RI "void \fBConfigSetIsString\fP (bool data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIsString\fP \fP"
.ti -1c
.RI "void \fBConfigSetIgnoreExit\fP (bool data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIgnoreExit\fP \fP"
.ti -1c
.RI "void \fBConfigSetIoTcp\fP (string host, string port, string myhost, string myport)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIoTcp\fP \fP"
.ti -1c
.RI "void \fBConfigSetIoUdsFile\fP (string data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIoUdsFile\fP \fP"
.ti -1c
.RI "void \fBConfigSetIoPipeSocket\fP (int data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetIoPipeSocket\fP \fP"
.ti -1c
.RI "void \fBConfigSetStartAs\fP (\fBSTART\fP data)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigSetStartAs\fP \fP"
.ti -1c
.RI "bool \fBConfigGetIsServer\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIsServer\fP \fP"
.ti -1c
.RI "bool \fBConfigGetIsString\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIsString\fP \fP"
.ti -1c
.RI "bool \fBConfigGetIsSilent\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIsSilent\fP \fP"
.ti -1c
.RI "string \fBConfigGetName\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetName\fP \fP"
.ti -1c
.RI "string \fBConfigGetSrvName\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetSrvName\fP \fP"
.ti -1c
.RI "int \fBConfigGetDebug\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetDebug\fP \fP"
.ti -1c
.RI "long \fBConfigGetTimeout\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetTimeout\fP \fP"
.ti -1c
.RI "int \fBConfigGetBuffersize\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetBuffersize\fP \fP"
.ti -1c
.RI "string \fBConfigGetIoTcpHost\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoTcpHost\fP \fP"
.ti -1c
.RI "string \fBConfigGetIoTcpPort\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoTcpPort\fP \fP"
.ti -1c
.RI "string \fBConfigGetIoTcpMyHost\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoTcpMyHost\fP \fP"
.ti -1c
.RI "string \fBConfigGetIoTcpMyPort\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoTcpMyPort\fP \fP"
.ti -1c
.RI "string \fBConfigGetIoUdsFile\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoUdsFile\fP \fP"
.ti -1c
.RI "int \fBConfigGetIoPipeSocket\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetIoPipeSocket\fP \fP"
.ti -1c
.RI "\fBSTART\fP \fBConfigGetStartAs\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetStartAs\fP \fP"
.ti -1c
.RI "int \fBConfigGetStatusIs\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqConfigGetStatusIs\fP \fP"
.ti -1c
.RI "void \fBExit\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqExit\fP \fP"
.ti -1c
.RI "void \fBLogC\fP (string prefix, int level, string text)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqLogC\fP \fP"
.ti -1c
.RI "\fBMqS\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqContextCreate\fP \fP"
.ti -1c
.RI "\fBMqS\fP (\fBMqS\fP tmpl)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqContextCreate\fP \fP"
.ti -1c
.RI "void \fBErrorC\fP (string proc, int num, string message)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorC\fP \fP"
.ti -1c
.RI "void \fBErrorSetCONTINUE\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorSetCONTINUE\fP \fP"
.ti -1c
.RI "void \fBErrorSetEXIT\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorSetEXIT\fP \fP"
.ti -1c
.RI "bool \fBErrorIsEXIT\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorIsEXIT\fP \fP"
.ti -1c
.RI "void \fBErrorRaise\fP ()"
.br
.RI "\fIthrow an \fBcsmsgque.MqSException\fP with the data from \fBMqErrorS\fP \fP"
.ti -1c
.RI "void \fBErrorReset\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorReset\fP \fP"
.ti -1c
.RI "void \fBErrorPrint\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorPrint\fP \fP"
.ti -1c
.RI "int \fBErrorGetNum\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorGetNum\fP \fP"
.ti -1c
.RI "string \fBErrorGetText\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorGetText\fP \fP"
.ti -1c
.RI "void \fBErrorSet\fP (Exception ex)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqErrorSet\fP \fP"
.ti -1c
.RI "string \fBLinkGetTargetIdent\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkGetTargetIdent \fP"
.ti -1c
.RI "bool \fBLinkIsParent\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkIsParent \fP"
.ti -1c
.RI "bool \fBLinkIsConnected\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkIsConnected \fP"
.ti -1c
.RI "int \fBLinkGetCtxId\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkGetCtxId \fP"
.ti -1c
.RI "\fBMqS\fP \fBLinkGetParent\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkGetParent \fP"
.ti -1c
.RI "void \fBLinkCreate\fP (params string[] argv)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkCreate \fP"
.ti -1c
.RI "void \fBLinkCreateChild\fP (\fBMqS\fP parent, params string[] argv)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkCreateChild \fP"
.ti -1c
.RI "void \fBLinkDelete\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkDelete \fP"
.ti -1c
.RI "void \fBLinkConnect\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqLinkConnect \fP"
.ti -1c
.RI "void \fBDLogC\fP (int level, string val)"
.br
.ti -1c
.RI "delegate void \fBCallback\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: public version from \fBMqTokenF\fP \fP"
.ti -1c
.RI "byte \fBReadY\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadY\fP \fP"
.ti -1c
.RI "bool \fBReadO\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadO\fP \fP"
.ti -1c
.RI "short \fBReadS\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadS\fP \fP"
.ti -1c
.RI "int \fBReadI\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadI\fP \fP"
.ti -1c
.RI "float \fBReadF\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadF\fP \fP"
.ti -1c
.RI "long \fBReadW\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadW\fP \fP"
.ti -1c
.RI "double \fBReadD\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadD\fP \fP"
.ti -1c
.RI "byte[] \fBReadB\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadB\fP \fP"
.ti -1c
.RI "byte[] \fBReadN\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadN\fP \fP"
.ti -1c
.RI "byte[] \fBReadBDY\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadBDY\fP \fP"
.ti -1c
.RI "\fBMqBufferS\fP \fBReadU\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadU\fP \fP"
.ti -1c
.RI "string \fBReadC\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadC\fP \fP"
.ti -1c
.RI "void \fBReadProxy\fP (\fBMqS\fP ctx)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadProxy\fP \fP"
.ti -1c
.RI "void \fBReadL_START\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadL_START\fP \fP"
.ti -1c
.RI "void \fBReadL_START\fP (\fBMqBufferS\fP buffer)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadL_START\fP with \fBMqBufferS\fP argument \fP"
.ti -1c
.RI "void \fBReadL_END\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadL_END\fP \fP"
.ti -1c
.RI "void \fBReadT_START\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadT_START\fP \fP"
.ti -1c
.RI "void \fBReadT_START\fP (\fBMqBufferS\fP buffer)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadT_START\fP with \fBMqBufferS\fP argument \fP"
.ti -1c
.RI "void \fBReadT_END\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadT_END\fP \fP"
.ti -1c
.RI "int \fBReadGetNumItems\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadGetNumItems\fP \fP"
.ti -1c
.RI "bool \fBReadItemExists\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadItemExists\fP \fP"
.ti -1c
.RI "void \fBReadUndo\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqReadUndo\fP \fP"
.ti -1c
.RI "void \fBSendSTART\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendSTART\fP \fP"
.ti -1c
.RI "void \fBSendEND\fP (string token)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendEND\fP \fP"
.ti -1c
.RI "void \fBSendEND_AND_WAIT\fP (string token, long timeout)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP \fP"
.ti -1c
.RI "void \fBSendEND_AND_WAIT\fP (string token)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_WAIT\fP \fP"
.ti -1c
.RI "void \fBSendEND_AND_CALLBACK\fP (string token, Callback call)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP \fP"
.ti -1c
.RI "void \fBSendEND_AND_CALLBACK\fP (string token, \fBIService\fP call)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendEND_AND_CALLBACK\fP \fP"
.ti -1c
.RI "void \fBSendRETURN\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendRETURN\fP \fP"
.ti -1c
.RI "void \fBSendERROR\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendERROR\fP \fP"
.ti -1c
.RI "void \fBSendY\fP (byte val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendY\fP \fP"
.ti -1c
.RI "void \fBSendO\fP (bool val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendO\fP \fP"
.ti -1c
.RI "void \fBSendS\fP (short val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendS\fP \fP"
.ti -1c
.RI "void \fBSendI\fP (int val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendI\fP \fP"
.ti -1c
.RI "void \fBSendF\fP (float val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendF\fP \fP"
.ti -1c
.RI "void \fBSendW\fP (long val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendW\fP \fP"
.ti -1c
.RI "void \fBSendD\fP (double val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendD\fP \fP"
.ti -1c
.RI "void \fBSendB\fP (byte[] val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendB\fP \fP"
.ti -1c
.RI "void \fBSendN\fP (byte[] val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendN\fP \fP"
.ti -1c
.RI "void \fBSendBDY\fP (byte[] val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendBDY\fP \fP"
.ti -1c
.RI "void \fBSendU\fP (\fBMqBufferS\fP buffer)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendU\fP \fP"
.ti -1c
.RI "void \fBSendC\fP (string val)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendC\fP \fP"
.ti -1c
.RI "void \fBSendL_START\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendL_START\fP \fP"
.ti -1c
.RI "void \fBSendL_END\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendL_END\fP \fP"
.ti -1c
.RI "void \fBSendT_START\fP (string token)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendT_START\fP \fP"
.ti -1c
.RI "void \fBSendT_END\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSendT_END\fP \fP"
.ti -1c
.RI "string \fBServiceGetToken\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceGetToken\fP \fP"
.ti -1c
.RI "bool \fBServiceIsTransaction\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceIsTransaction\fP \fP"
.ti -1c
.RI "\fBMqS\fP \fBServiceGetFilter\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceGetFilter\fP \fP"
.ti -1c
.RI "void \fBServiceCreate\fP (string token, Callback call)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceCreate\fP \fP"
.ti -1c
.RI "void \fBServiceCreate\fP (string token, \fBIService\fP call)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceCreate\fP \fP"
.ti -1c
.RI "void \fBServiceDelete\fP (string token)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceDelete\fP \fP"
.ti -1c
.RI "void \fBServiceProxy\fP (string token)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceProxy\fP \fP"
.ti -1c
.RI "void \fBServiceProxy\fP (string token, int id)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqServiceProxy\fP \fP"
.ti -1c
.RI "void \fBProcessEvent\fP (long timeout, \fBWAIT\fP wait)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqProcessEvent\fP, wait for \fItimeout\fP seconds and process event or raise an error \fP"
.ti -1c
.RI "void \fBProcessEvent\fP (\fBTIMEOUT\fP timeout, \fBWAIT\fP wait)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqProcessEvent\fP, wait for \fITIMEOUT\fP seconds and process event or raise an error \fP"
.ti -1c
.RI "void \fBProcessEvent\fP (\fBWAIT\fP wait)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqProcessEvent\fP, wait application default time \fBMQ_TIMEOUT_DEFAULT\fP \fP"
.ti -1c
.RI "void \fBProcessEvent\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqProcessEvent\fP, don't wait just check for an event \fP"
.ti -1c
.RI "void \fBSlaveWorker\fP (int master_id, params string[] argv)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: MqSlaveWorker \fP"
.ti -1c
.RI "void \fBSlaveCreate\fP (int id, \fBMqS\fP slave)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSlaveCreate\fP \fP"
.ti -1c
.RI "void \fBSlaveDelete\fP (int id)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSlaveDelete\fP \fP"
.ti -1c
.RI "\fBMqS\fP \fBSlaveGet\fP (int id)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSlaveGet\fP \fP"
.ti -1c
.RI "bool \fBSlaveIs\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSlaveIs\fP \fP"
.ti -1c
.RI "\fBMqS\fP \fBSlaveGetMaster\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqSlaveGetMaster\fP \fP"
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static void \fBInit\fP (params string[] argv)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqInitCreate\fP \fP"
.in -1c
.SS ""

.in +1c
.ti -1c
.RI "void \fBFactoryCtxIdentSet\fP (string ident)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqFactoryCtxIdentSet\fP \fP"
.ti -1c
.RI "string \fBFactoryCtxIdentGet\fP ()"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqFactoryCtxIdentGet\fP \fP"
.ti -1c
.RI "void \fBFactoryCtxDefaultSet\fP (string ident)"
.br
.RI "\fIimplement the \fBlibmsgque\fP API object: \fBMqFactoryCtxDefaultSet\fP \fP"
.in -1c
.SH "Detailed Description"
.PP 
implement the \fBlibmsgque\fP API object: \fBMqS\fP 
.PP
Definition at line 24 of file buffer.cs.
.SH "Member Function Documentation"
.PP 
.SS "delegate void csmsgque.MqS.Callback ()"
.PP
implement the \fBlibmsgque\fP API object: public version from \fBMqTokenF\fP 
.SS "void csmsgque.MqS.DLogC (intlevel, stringval)"
.PP
Definition at line 126 of file MqS.cs.
.SS "void csmsgque.MqS.FactoryCtxDefaultSet (stringident)"
.PP
implement the \fBlibmsgque\fP API object: \fBMqFactoryCtxDefaultSet\fP 
.PP
Definition at line 275 of file config.cs.
.SS "string csmsgque.MqS.FactoryCtxIdentGet ()"
.PP
implement the \fBlibmsgque\fP API object: \fBMqFactoryCtxIdentGet\fP 
.PP
Definition at line 269 of file config.cs.
.SS "void csmsgque.MqS.FactoryCtxIdentSet (stringident)"
.PP
implement the \fBlibmsgque\fP API object: \fBMqFactoryCtxIdentSet\fP 
.PP
Definition at line 263 of file config.cs.
.SS "static void csmsgque.MqS.Init (params string[]argv)\fC [static, protected]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqInitCreate\fP 
.PP
Definition at line 141 of file MqS.cs.

.SH "Author"
.PP 
Generated automatically by Doxygen for vbmsgque from the source code.
