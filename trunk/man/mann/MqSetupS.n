.TH "MqSetupS" n "11 Jan 2010" "Version 4.1" "vbmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MqSetupS \- application-programmer configuration data  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <msgque.h>\fP
.PP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBMQ_STR\fP \fBident\fP"
.br
.R "application identifier "
.ti -1c
.RI "struct \fBMqLinkSetupS\fP \fBChild\fP"
.br
.R "setup/cleanup a \fICHILD\fP object "
.ti -1c
.RI "struct \fBMqLinkSetupS\fP \fBParent\fP"
.br
.R "setup/cleanup a \fIPARENT\fP object "
.ti -1c
.RI "struct \fBMqCallbackS\fP \fBBgError\fP"
.br
.R "pointer to the background error service "
.ti -1c
.RI "\fBMQ_BOL\fP \fBisServer\fP"
.br
.R "Create a \fIserver\fP context. "
.ti -1c
.RI "struct \fBMqCallbackS\fP \fBServerSetup\fP"
.br
.R "pointer to the Server-Setup function "
.ti -1c
.RI "struct \fBMqCallbackS\fP \fBServerCleanup\fP"
.br
.R "pointer to the Server-Cleanup function "
.ti -1c
.RI "struct \fBMqCallbackS\fP \fBEvent\fP"
.br
.R "Create a link to the calling tool event-handling queue. "
.ti -1c
.RI "struct \fBMqFactoryS\fP \fBFactory\fP"
.br
.R "function pointers used to create and delete an object or a class instance "
.ti -1c
.RI "\fBMqSetupF\fP \fBfThreadInit\fP"
.br
.R "setup and initialize a thread before a new thread is created by \fBlibmsgque\fP "
.ti -1c
.RI "\fBMqSetupF\fP \fBfForkInit\fP"
.br
.R "setup and initialize a fork-process before a new fork-process is created by \fBlibmsgque\fP "
.ti -1c
.RI "\fBMqExitF\fP \fBfProcessExit\fP"
.br
.R "exit/cleanup a process "
.ti -1c
.RI "\fBMqExitF\fP \fBfThreadExit\fP"
.br
.R "exit/cleanup a thread "
.ti -1c
.RI "\fBMqHelpF\fP \fBfHelp\fP"
.br
.R "Create a link to the calling tool \fIhelp\fP function. "
.ti -1c
.RI "\fBMQ_BOL\fP \fBignoreExit\fP"
.br
.R "ignore the server EXIT, set with \fBMqConfigSetIgnoreExit\fP "
.in -1c
.SH "Detailed Description"
.PP 
application-programmer configuration data 
.PP
Definition at line 761 of file msgque.h.
.SH "Member Data Documentation"
.PP 
.SS "struct \fBMqCallbackS\fP \fBMqSetupS.BgError\fP\fC [read]\fP"
.PP
pointer to the background error service 
.PP
A background error is an error without an link to an workflow. The error happen if an \fBMqSendEND\fP call fails or if an other asynchronous task fails. if the callback is \fBnot\fP specified the error is printed to stderr but no error if left in the context. if the callback is defined the context is set to the error and the callback is called to process this error. On the callback the error can be cleared up with \fBMqErrorReset\fP. 
.PP
Definition at line 787 of file msgque.h.
.SS "struct \fBMqLinkSetupS\fP \fBMqSetupS.Child\fP\fC [read]\fP"
.PP
setup/cleanup a \fICHILD\fP object 
.PP
\fBAttention:\fP
.RS 4
always call this functions using \fBMqLinkCreate\fP and \fBMqLinkDelete\fP 
.RE
.PP

.PP
Definition at line 774 of file msgque.h.
.SS "struct \fBMqCallbackS\fP \fBMqSetupS.Event\fP\fC [read]\fP"
.PP
Create a link to the calling tool event-handling queue. 
.PP
Event-Handling is used to process instructions in the \fIbackground\fP to give the tool-user the feeling of a non-blocking application. For example Tcl using the event-handling to update the Tk user-interface while the application is waiting for data. The event handling function is called on idle and is designed for a very \fBshort\fP function execution time. Do only \fIone\fP action per function call. This function will be called with a ~10000 usec interval to guarantee a parallel like execution. 
.PP
\fBAttention:\fP
.RS 4
Together with \fBignoreExit\fP the Event-Handler is used to start background processing of tasks. Return the Event-Handler with \fBErrorSetCONTINUE\fP to signal that all tasks are finished and the process/thread is ready to exit. If \fBall\fP \fIchild\fP context Event-Handler return with \fBErrorSetCONTINUE\fP too and the client/server links is already shutdown the process/thread will \fBexit\fP. example: \fCtheLink/example/VB.NET/Filter4\fP.VB.NET 
.RE
.PP

.PP
Definition at line 831 of file msgque.h.
.SS "struct \fBMqFactoryS\fP \fBMqSetupS.Factory\fP\fC [read]\fP"
.PP
function pointers used to create and delete an object or a class instance 
.PP
type default option application context  DATA NULL NO server/client parent  
.PP
The \fIfactory\fP pattern is used to:
.IP "\(bu" 2
create a new object (C, TCL) or a new class instance (C++, C#, JAVA, PYTHON, PERL, VB.NET)
.IP "\(bu" 2
create a \fIserver-child\fP object
.IP "\(bu" 2
create a \fIserver-parent\fP object using the \fI--thread\fP startup qualification
.IP "\(bu" 2
create a \fIslave-worker-parent\fP object
.IP "\(bu" 2
create a \fIslave-child\fP object
.IP "\(bu" 2
create a \fIfilter-parent\fP object using the \fI--fork\fP or \fI--thread\fP startup qualification
.PP

.PP
Definition at line 847 of file msgque.h.
.SS "\fBMqSetupF\fP \fBMqSetupS.fForkInit\fP"
.PP
setup and initialize a fork-process before a new fork-process is created by \fBlibmsgque\fP 
.PP
Definition at line 853 of file msgque.h.
.SS "\fBMqHelpF\fP \fBMqSetupS.fHelp\fP"
.PP
Create a link to the calling tool \fIhelp\fP function. 
.PP
type default option application context  POINTER NULL NO server/client parent  
.PP
As a service to the programmer the \fBlibmsgque\fP startup code in \fBMqLinkCreate\fP checks for the both options \fC-h\fP and \fC--help\fP to provide a tool-specific help-page and exit. 
.PP
Definition at line 869 of file msgque.h.
.SS "\fBMqExitF\fP \fBMqSetupS.fProcessExit\fP"
.PP
exit/cleanup a process 
.PP
Definition at line 856 of file msgque.h.
.SS "\fBMqExitF\fP \fBMqSetupS.fThreadExit\fP"
.PP
exit/cleanup a thread 
.PP
Definition at line 859 of file msgque.h.
.SS "\fBMqSetupF\fP \fBMqSetupS.fThreadInit\fP"
.PP
setup and initialize a thread before a new thread is created by \fBlibmsgque\fP 
.PP
Definition at line 850 of file msgque.h.
.SS "\fBMQ_STR\fP \fBMqSetupS.ident\fP"
.PP
application identifier 
.PP
The application \fIidentifier\fP is used to modify the client or filter behaviour depending on the server \fIidentifier\fP. The server set the \fIidentifier\fP using \fBMqConfigSetIdent\fP and the client ask for the identifier of the server using \fI\fBMqConfigGetIdent\fP\fP usually used in the client configuration setup code. The \fIidentifier\fP is \fBnot\fP changeable by the user, like the \fIname\fP configuration option, because this is a 'build-in' feature set by the \fIprogrammer\fP. 
.PP
Definition at line 770 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqSetupS.ignoreExit\fP"
.PP
ignore the server EXIT, set with \fBMqConfigSetIgnoreExit\fP 
.PP
By default the \fIserver\fP exit if the \fIclient\fP close the connection. If the boolean value is \fItrue\fP the \fIserver\fP will continue to work. Without \fIclient\fP connection only the internal event function (set with \fBIEvent\fP) is available to work on tasks. if \fIall\fP (parent and child) event functions return with \fBErrorSetCONTINUE\fP (nothing to do) the process exit. 
.PP
Definition at line 878 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqSetupS.isServer\fP"
.PP
Create a \fIserver\fP context. 
.PP
type default option application context  BOOL NO NO server parent  
.PP
If the \fIserver\fP option is available the \fBMqLinkCreate\fP will create an \fBlibmsgque\fP object usable as a server. For detail information read: \fCWHAT-IS: parent versa child\fP 
.PP
Definition at line 797 of file msgque.h.
.SS "struct \fBMqLinkSetupS\fP \fBMqSetupS.Parent\fP\fC [read]\fP"
.PP
setup/cleanup a \fIPARENT\fP object 
.PP
\fBAttention:\fP
.RS 4
always call this functions using \fBMqLinkCreate\fP and \fBMqLinkDelete\fP 
.RE
.PP

.PP
Definition at line 778 of file msgque.h.
.SS "struct \fBMqCallbackS\fP \fBMqSetupS.ServerCleanup\fP\fC [read]\fP"
.PP
pointer to the Server-Cleanup function 
.PP
This Server-Cleanup function is used to cleanup a server-context-link and act like a destructor. The function is called on the begin of \fBMqLinkDelete\fP. 
.PP
Definition at line 812 of file msgque.h.
.SS "struct \fBMqCallbackS\fP \fBMqSetupS.ServerSetup\fP\fC [read]\fP"
.PP
pointer to the Server-Setup function 
.PP
This Server-Setup function is used to configure a new server-link and act like a constructor. This function is called on the end of \fBMqLinkCreate\fP. A server-context-link is created for every new incoming connection request and is used to provide context specific services . 
.PP
\fBAttention:\fP
.RS 4
if a \fIchild-context\fP is created, use this function together with \fBMqFactoryCreateS\fP is required to configure the new \fIchild-context\fP. 
.RE
.PP

.PP
Definition at line 806 of file msgque.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for vbmsgque from the source code.
