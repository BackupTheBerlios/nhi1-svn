.TH "MqS" n "Tue Jan 11 2011" "Version 4.8" "vbmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MqS \- 
.PP
data structure for the \fIlibmsgque-specific-data\fP  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <msgque.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBMQ_INT\fP \fBsignature\fP"
.br
.RI "\fIused to verify the \fIpointer-data-type\fP in a type-less programming languages \fP"
.ti -1c
.RI "struct \fBMqConfigS\fP \fBconfig\fP"
.br
.RI "\fIthe configuration data is used for 'end-user' configuration \fP"
.ti -1c
.RI "struct \fBMqSetupS\fP \fBsetup\fP"
.br
.RI "\fIthe setup data is used to link the object with the user application \fP"
.ti -1c
.RI "struct \fBMqErrorS\fP \fBerror\fP"
.br
.RI "\fIerror object data \fP"
.ti -1c
.RI "struct \fBMqLinkS\fP \fBlink\fP"
.br
.RI "\fIlink object data \fP"
.ti -1c
.RI "struct \fBMqBufferS\fP * \fBtemp\fP"
.br
.RI "\fImisc temporary \fBMqBufferS\fP object \fP"
.ti -1c
.RI "enum \fBMqStatusIsE\fP \fBstatusIs\fP"
.br
.RI "\fIhow the context was created? \fP"
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fBMQ_BOL\fP \fBMqContextDelete_LOCK\fP:1"
.br
.RI "\fIprotect MqContextDelete against double-call \fP"
.ti -1c
.RI "   \fBMQ_BOL\fP \fBMqContextFree_LOCK\fP:1"
.br
.RI "\fIprotect MqContextFree against double-call \fP"
.ti -1c
.RI "   \fBMQ_BOL\fP \fBEventProc_LOCK\fP:1"
.br
.RI "\fIprotect sCallEventProc against double-call \fP"
.ti -1c
.RI "   \fBMQ_BOL\fP \fBonExit\fP:1"
.br
.RI "\fIis already an 'exit' ongoing? \fP"
.ti -1c
.RI "} \fBbits\fP"
.br
.RI "\fIboolean bit-fields \fP"
.ti -1c
.RI "\fBMQ_PTR\fP \fBthreadData\fP"
.br
.RI "\fIapplication specific thread data \fP"
.ti -1c
.RI "\fBMQ_PTR\fP \fBself\fP"
.br
.RI "\fIlink to the managed object \fP"
.ti -1c
.RI "\fBMQ_SIZE\fP \fBcontextsize\fP"
.br
.RI "\fIALLOC-size of the user-defined context struct. \fP"
.ti -1c
.RI "\fBMQ_INT\fP \fBrefCount\fP"
.br
.RI "\fIis an object in use? \fP"
.ti -1c
.RI "struct MqGcS * \fBgc\fP"
.br
.RI "\fIlink to the garbage-collection \fP"
.ti -1c
.RI "\fBMQ_SIZE\fP \fBgcid\fP"
.br
.RI "\fIposition in the gc array \fP"
.ti -1c
.RI "\fBMQ_CST\fP \fBcaller\fP"
.br
.RI "\fIidentify the parent of the current called function \fP"
.in -1c
.SH "Detailed Description"
.PP 
data structure for the \fIlibmsgque-specific-data\fP 
.PP
Definition at line 1572 of file msgque.h.
.SH "Member Data Documentation"
.PP 
.SS "struct { ... }   \fBMqS.bits\fP"
.PP
boolean bit-fields 
.SS "\fBMQ_CST\fP \fBMqS.caller\fP"
.PP
identify the parent of the current called function 
.PP
Definition at line 1593 of file msgque.h.
.SS "struct \fBMqConfigS\fP \fBMqS.config\fP"
.PP
the configuration data is used for 'end-user' configuration 
.PP
Definition at line 1575 of file msgque.h.
.SS "\fBMQ_SIZE\fP \fBMqS.contextsize\fP"
.PP
ALLOC-size of the user-defined context struct. 
.PP
Definition at line 1589 of file msgque.h.
.SS "struct \fBMqErrorS\fP \fBMqS.error\fP"
.PP
error object data 
.PP
Definition at line 1577 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqS.EventProc_LOCK\fP"
.PP
protect sCallEventProc against double-call 
.PP
Definition at line 1584 of file msgque.h.
.SS "struct MqGcS* \fBMqS.gc\fP"
.PP
link to the garbage-collection 
.PP
Definition at line 1591 of file msgque.h.
.SS "\fBMQ_SIZE\fP \fBMqS.gcid\fP"
.PP
position in the gc array 
.PP
Definition at line 1592 of file msgque.h.
.SS "struct \fBMqLinkS\fP \fBMqS.link\fP"
.PP
link object data 
.PP
Definition at line 1578 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqS.MqContextDelete_LOCK\fP"
.PP
protect MqContextDelete against double-call 
.PP
Definition at line 1582 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqS.MqContextFree_LOCK\fP"
.PP
protect MqContextFree against double-call 
.PP
Definition at line 1583 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqS.onExit\fP"
.PP
is already an 'exit' ongoing? 
.PP
Definition at line 1585 of file msgque.h.
.SS "\fBMQ_INT\fP \fBMqS.refCount\fP"
.PP
is an object in use? 
.PP
Definition at line 1590 of file msgque.h.
.SS "\fBMQ_PTR\fP \fBMqS.self\fP"
.PP
link to the managed object 
.PP
Definition at line 1588 of file msgque.h.
.SS "struct \fBMqSetupS\fP \fBMqS.setup\fP"
.PP
the setup data is used to link the object with the user application 
.PP
Definition at line 1576 of file msgque.h.
.SS "\fBMQ_INT\fP \fBMqS.signature\fP"
.PP
used to verify the \fIpointer-data-type\fP in a type-less programming languages 
.PP
Definition at line 1573 of file msgque.h.
.SS "enum \fBMqStatusIsE\fP \fBMqS.statusIs\fP"
.PP
how the context was created? 
.PP
Definition at line 1580 of file msgque.h.
.SS "struct \fBMqBufferS\fP* \fBMqS.temp\fP"
.PP
misc temporary \fBMqBufferS\fP object 
.PP
Definition at line 1579 of file msgque.h.
.SS "\fBMQ_PTR\fP \fBMqS.threadData\fP"
.PP
application specific thread data 
.PP
Definition at line 1587 of file msgque.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for vbmsgque from the source code.
