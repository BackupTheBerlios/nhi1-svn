.TH "Mq_Context_CC_API" n "10 Jan 2010" "Version 4.1" "ccmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Mq_Context_CC_API \- \fIcontext\fP, the top-level data structure and \fIapplication-handle\fP   

.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBccmsgque::MqC::MqC::ProcCallS\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(MqC::* \fBccmsgque::MqC::CallbackF\fP )()"
.br
.ti -1c
.RI "typedef MqC *(MqC::* \fBccmsgque::MqC::FactoryF\fP )()"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBccmsgque::MqC::MqC\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqContextCreate\fP "
.ti -1c
.RI "virtual \fBccmsgque::MqC::~MqC\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqContextDelete\fP "
.ti -1c
.RI "\fBMQ_BUF\fP \fBccmsgque::MqC::GetTempBuffer\fP ()"
.br
.ti -1c
.RI "void \fBccmsgque::MqC::Exit\fP ()"
.br
.ti -1c
.RI "void \fBccmsgque::MqC::Sleep\fP (unsigned int const sec)  throw (MqCException)"
.br
.ti -1c
.RI "void \fBccmsgque::MqC::USleep\fP (unsigned int const usec)  throw (MqCException)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fBMqS\fP \fBccmsgque::MqC::context\fP"
.br
.R "link between \fBMqC\fP and \fBMqS\fP "
.in -1c
.SH "Detailed Description"
.PP 
\fIcontext\fP, the top-level data structure and \fIapplication-handle\fP  

\fIcontext\fP, the top-level data structure and \fIapplication-handle\fP 
.PP
The \fIcontext-data-structure\fP has a \fIlibmsgque-specific-part\fP and an \fIapplication-specific-part\fP. Both parts are linked together. The \fIlibmsgque-specific-part\fP has all data required to manage a \fIclient-server-link\fP. The \fIapplication-specific-part\fP as all data required by the application. The following C-API example demonstrate the layout of the \fIcontext-data-structure\fP. 
.PP
.nf
 struct MyCtxDataS {
   struct MqS  mqctx;   // libmsgque-specific-data
   int         mydata;  // application-specific-data
   ...                  // application-specific-data
 };

.fi
.PP
 The \fIlibmsgque-specific-data\fP have to be the \fIfirst\fP data entry in the structure.
.br
 A \fIhigh-level-programming-language\fP like JAVA, C#, C++, Perl, Python, Tcl or VB-NET is using a wrapper arround this \fIdata-structure\fP as \fIapplication-handle\fP.
.PP
The \fIprogramming-language\fP JAVA, C#, C++, Python or VB-NET does providing a concept for the \fIapplication-specific-data\fP defined as \fIclass-member-data\fP.  
.SH "Typedef Documentation"
.PP 
.SS "typedef void(MqC::* \fBccmsgque::MqC::CallbackF\fP)()\fC [inherited]\fP"
.PP
.SS "typedef MqC*(MqC::* \fBccmsgque::MqC::FactoryF\fP)()\fC [inherited]\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "void ccmsgque::MqC::Exit ()\fC [inline, inherited]\fP"
.PP
Definition at line 361 of file ccmsgque.h.
.SS "\fBMQ_BUF\fP ccmsgque::MqC::GetTempBuffer ()\fC [inline, inherited]\fP"
.PP
Definition at line 360 of file ccmsgque.h.
.SS "ccmsgque::MqC::MqC ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqContextCreate\fP 
.PP
.SS "void ccmsgque::MqC::Sleep (unsigned int const  sec)  throw (MqCException)\fC [inline, inherited]\fP"
.PP
Definition at line 362 of file ccmsgque.h.
.SS "void ccmsgque::MqC::USleep (unsigned int const  usec)  throw (MqCException)\fC [inline, inherited]\fP"
.PP
Definition at line 363 of file ccmsgque.h.
.SS "virtual ccmsgque::MqC::~MqC ()\fC [virtual, inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqContextDelete\fP 
.PP
.SH "Variable Documentation"
.PP 
.SS "struct \fBMqS\fP \fBccmsgque::MqC::context\fP\fC [read, protected, inherited]\fP"
.PP
link between \fBMqC\fP and \fBMqS\fP 
.PP
Definition at line 296 of file ccmsgque.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for ccmsgque from the source code.
