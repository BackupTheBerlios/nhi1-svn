.TH "MqTypeAPI" n "4 Jan 2010" "Version 4.1" "tclmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MqTypeAPI \- a collection of common used data types and definitions  

.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBmq_strtoll\fP   strtoll"
.br
.ti -1c
.RI "#define \fBmq_strdup\fP(v)   strdup(v)"
.br
.ti -1c
.RI "#define \fBmq_getpid\fP   getpid"
.br
.ti -1c
.RI "#define \fBmq_unlink\fP   unlink"
.br
.ti -1c
.RI "#define \fBmq_snprintf\fP   snprintf"
.br
.ti -1c
.RI "#define \fBMQ_CLRCALL\fP"
.br
.ti -1c
.RI "#define \fBMQ_STDCALL\fP"
.br
.ti -1c
.RI "#define \fBMQ_CDECL\fP"
.br
.ti -1c
.RI "#define \fBmq_inline\fP   inline"
.br
.ti -1c
.RI "#define \fBMQ_DECL\fP   MQ_CDECL"
.br
.ti -1c
.RI "#define \fBBEGIN_C_DECLS\fP"
.br
.ti -1c
.RI "#define \fBEND_C_DECLS\fP"
.br
.ti -1c
.RI "#define \fBlikely\fP(x)   __builtin_expect((x),1)"
.br
.R "gcc jump optimization "
.ti -1c
.RI "#define \fBunlikely\fP(x)   __builtin_expect((x),0)"
.br
.R "gcc jump optimization "
.ti -1c
.RI "#define \fBmq_timeval\fP   timeval"
.br
.ti -1c
.RI "#define \fBmq_timezone\fP   timezone"
.br
.ti -1c
.RI "#define \fBMQ_TIMEOUT\fP   900"
.br
.R "maximum timeout in sec (900 sec) "
.ti -1c
.RI "#define \fBMQ_TIMEOUT5\fP   (MQ_TIMEOUT/5)"
.br
.R "long timeout in sec (180 sec) "
.ti -1c
.RI "#define \fBMQ_TIMEOUT10\fP   (MQ_TIMEOUT/10  < 1 ? 1 : MQ_TIMEOUT/10)"
.br
.R "normal timeout in sec (90 sec) "
.ti -1c
.RI "#define \fBMQ_TIMEOUT45\fP   (MQ_TIMEOUT/45  < 1 ? 1 : MQ_TIMEOUT/45)"
.br
.R "short timeout in sec (20 sec) "
.ti -1c
.RI "#define \fBMQ_TIMEOUT90\fP   (MQ_TIMEOUT/90  < 1 ? 1 : MQ_TIMEOUT/90)"
.br
.R "shorter timeout in sec (10 sec) This TIMEOUT is used for socket connection with 'connect' "
.ti -1c
.RI "#define \fBMQ_TIMEOUT180\fP   (MQ_TIMEOUT/180 < 1 ? 1 : MQ_TIMEOUT/180)"
.br
.R "very short timeout in sec (5 sec) "
.ti -1c
.RI "#define \fBMQ_TIMEOUT_USER\fP   -2"
.br
.R "request the user defined timeout value from the argument of the \fC--timeout\fP option "
.ti -1c
.RI "#define \fBMQ_EXTERN\fP"
.br
.R "define the external binding "
.ti -1c
.RI "#define \fBMQ_CPPXSTR\fP(s)   MQ_CPPSTR(s)"
.br
.R "connecting of expressions, step 1 "
.ti -1c
.RI "#define \fBMQ_CPPSTR\fP(s)   #s"
.br
.R "connecting of expressions, step 2 "
.ti -1c
.RI "#define \fBMQ_ALFA\fP   '@'"
.br
.R "MQ_ALFA the command-line separator between server and client. "
.ti -1c
.RI "#define \fBMQ_ALFA_STR\fP   '@'"
.br
.R "MQ_ALFA the command-line separator as string. "
.ti -1c
.RI "#define \fBMQ_NO\fP   0"
.br
.R "boolean NO "
.ti -1c
.RI "#define \fBMQ_YES\fP   1"
.br
.R "boolean YES "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef signed char \fBMQ_BYT\fP"
.br
.R "1 byte \fBbyte\fP data-type "
.ti -1c
.RI "typedef signed char \fBMQ_BOL\fP"
.br
.R "1 byte \fBboolean\fP data-type "
.ti -1c
.RI "typedef short \fBMQ_SRT\fP"
.br
.R "2 byte \fBshort\fP data-type "
.ti -1c
.RI "typedef int \fBMQ_INT\fP"
.br
.R "4 byte \fBinteger\fP data-type "
.ti -1c
.RI "typedef float \fBMQ_FLT\fP"
.br
.R "4 byte \fBfloat\fP data-type "
.ti -1c
.RI "typedef long long int \fBMQ_WID\fP"
.br
.R "8 byte \fBwide\fP integer data-type "
.ti -1c
.RI "typedef double \fBMQ_DBL\fP"
.br
.R "8 byte \fBdouble\fP data-type "
.ti -1c
.RI "typedef union \fBMqBufferAtomU\fP \fBMQ_ATO\fP"
.br
.R "8 byte \fBatom\fP data-type "
.ti -1c
.RI "typedef int \fBMQ_SIZE\fP"
.br
.R "array size data-type "
.ti -1c
.RI "typedef \fBMQ_WID\fP \fBMQ_TIME_T\fP"
.br
.R "OS wide MQ_TIME_T. "
.ti -1c
.RI "typedef int \fBMQ_HDL\fP"
.br
.R "handle data-type "
.ti -1c
.RI "typedef void \fBMQ_PTRB\fP"
.br
.R "pointer basic data-type "
.ti -1c
.RI "typedef char \fBMQ_STRB\fP"
.br
.R "string basic data-type "
.ti -1c
.RI "typedef unsigned char \fBMQ_BINB\fP"
.br
.R "\fIbyte-array\fP basic data-type "
.ti -1c
.RI "typedef unsigned char \fBMQ_LSTB\fP"
.br
.R "list basic data-type "
.ti -1c
.RI "typedef \fBMQ_PTRB\fP * \fBMQ_PTR\fP"
.br
.R "generic pointer data-type "
.ti -1c
.RI "typedef \fBMQ_STRB\fP * \fBMQ_STR\fP"
.br
.R "string pointer data-type "
.ti -1c
.RI "typedef \fBMQ_STRB\fP const * \fBMQ_CST\fP"
.br
.R "const string pointer data-type "
.ti -1c
.RI "typedef \fBMQ_BINB\fP * \fBMQ_BIN\fP"
.br
.R "\fIbyte-array\fP pointer data-type "
.ti -1c
.RI "typedef \fBMQ_LSTB\fP * \fBMQ_LST\fP"
.br
.R "list pointer data-type "
.ti -1c
.RI "typedef struct \fBMqBufferS\fP * \fBMQ_BUF\fP"
.br
.R "Buffer pointer data-type. "
.ti -1c
.RI "typedef struct \fBMqBufferLS\fP * \fBMQ_BFL\fP"
.br
.R "Buffer-List pointer data-type. "
.ti -1c
.RI "typedef struct \fBMqS\fP * \fBMQ_CTX\fP"
.br
.R "Context pointer data-type. "
.ti -1c
.RI "typedef \fBMQ_INT\fP \fBMQ_SOCK\fP"
.br
.R "data type for a socket handle "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBMqWaitOnEventE\fP { \fBMQ_WAIT_NO\fP =  0, \fBMQ_WAIT_ONCE\fP =  1, \fBMQ_WAIT_FOREVER\fP =  2 }"
.br
.R "wait for an event? "
.in -1c
.SH "Detailed Description"
.PP 
a collection of common used data types and definitions 
.SH "Define Documentation"
.PP 
.SS "#define BEGIN_C_DECLS"
.PP
Definition at line 98 of file msgque.h.
.SS "#define END_C_DECLS"
.PP
Definition at line 99 of file msgque.h.
.SS "#define likely(x)   __builtin_expect((x),1)"
.PP
gcc jump optimization 
.PP
Definition at line 112 of file msgque.h.
.SS "#define MQ_ALFA   '@'"
.PP
MQ_ALFA the command-line separator between server and client. 
.PP
Definition at line 231 of file msgque.h.
.SS "#define MQ_ALFA_STR   '@'"
.PP
MQ_ALFA the command-line separator as string. 
.PP
Definition at line 233 of file msgque.h.
.SS "#define MQ_CDECL"
.PP
Definition at line 71 of file msgque.h.
.SS "#define MQ_CLRCALL"
.PP
Definition at line 69 of file msgque.h.
.SS "#define MQ_CPPSTR(s)   #s"
.PP
connecting of expressions, step 2 
.PP
Definition at line 228 of file msgque.h.
.SS "#define MQ_CPPXSTR(s)   MQ_CPPSTR(s)"
.PP
connecting of expressions, step 1 
.PP
Definition at line 226 of file msgque.h.
.SS "#define MQ_DECL   MQ_CDECL"
.PP
Definition at line 82 of file msgque.h.
.SS "#define MQ_EXTERN"
.PP
define the external binding 
.PP
Definition at line 216 of file msgque.h.
.SS "#define mq_getpid   getpid"
.PP
Definition at line 66 of file msgque.h.
.SS "#define mq_inline   inline"
.PP
Definition at line 72 of file msgque.h.
.SS "#define MQ_NO   0"
.PP
boolean NO 
.PP
Definition at line 319 of file msgque.h.
.SS "#define mq_snprintf   snprintf"
.PP
Definition at line 68 of file msgque.h.
.SS "#define MQ_STDCALL"
.PP
Definition at line 70 of file msgque.h.
.SS "#define mq_strdup(v)   strdup(v)"
.PP
Definition at line 65 of file msgque.h.
.PP
Referenced by mq_strdup_save().
.SS "#define mq_strtoll   strtoll"
.PP
Definition at line 64 of file msgque.h.
.SS "#define MQ_TIMEOUT   900"
.PP
maximum timeout in sec (900 sec) 
.PP
Definition at line 149 of file msgque.h.
.SS "#define MQ_TIMEOUT10   (MQ_TIMEOUT/10  < 1 ? 1 : MQ_TIMEOUT/10)"
.PP
normal timeout in sec (90 sec) 
.PP
Definition at line 153 of file msgque.h.
.SS "#define MQ_TIMEOUT180   (MQ_TIMEOUT/180 < 1 ? 1 : MQ_TIMEOUT/180)"
.PP
very short timeout in sec (5 sec) 
.PP
Definition at line 160 of file msgque.h.
.SS "#define MQ_TIMEOUT45   (MQ_TIMEOUT/45  < 1 ? 1 : MQ_TIMEOUT/45)"
.PP
short timeout in sec (20 sec) 
.PP
Definition at line 155 of file msgque.h.
.SS "#define MQ_TIMEOUT5   (MQ_TIMEOUT/5)"
.PP
long timeout in sec (180 sec) 
.PP
Definition at line 151 of file msgque.h.
.SS "#define MQ_TIMEOUT90   (MQ_TIMEOUT/90  < 1 ? 1 : MQ_TIMEOUT/90)"
.PP
shorter timeout in sec (10 sec) This TIMEOUT is used for socket connection with 'connect' 
.PP
Definition at line 158 of file msgque.h.
.SS "#define MQ_TIMEOUT_USER   -2"
.PP
request the user defined timeout value from the argument of the \fC--timeout\fP option 
.PP
Definition at line 162 of file msgque.h.
.SS "#define mq_timeval   timeval"
.PP
Definition at line 137 of file msgque.h.
.SS "#define mq_timezone   timezone"
.PP
Definition at line 138 of file msgque.h.
.SS "#define mq_unlink   unlink"
.PP
Definition at line 67 of file msgque.h.
.SS "#define MQ_YES   1"
.PP
boolean YES 
.PP
Definition at line 323 of file msgque.h.
.SS "#define unlikely(x)   __builtin_expect((x),0)"
.PP
gcc jump optimization 
.PP
Definition at line 115 of file msgque.h.
.SH "Typedef Documentation"
.PP 
.SS "typedef union \fBMqBufferAtomU\fP \fBMQ_ATO\fP"
.PP
8 byte \fBatom\fP data-type 
.PP
Definition at line 270 of file msgque.h.
.SS "typedef struct \fBMqBufferLS\fP* \fBMQ_BFL\fP"
.PP
Buffer-List pointer data-type. 
.PP
Definition at line 305 of file msgque.h.
.SS "typedef \fBMQ_BINB\fP* \fBMQ_BIN\fP"
.PP
\fIbyte-array\fP pointer data-type 
.PP
Definition at line 299 of file msgque.h.
.SS "typedef unsigned char \fBMQ_BINB\fP"
.PP
\fIbyte-array\fP basic data-type 
.PP
Definition at line 288 of file msgque.h.
.SS "typedef signed char \fBMQ_BOL\fP"
.PP
1 byte \fBboolean\fP data-type 
.PP
Definition at line 254 of file msgque.h.
.SS "typedef struct \fBMqBufferS\fP* \fBMQ_BUF\fP"
.PP
Buffer pointer data-type. 
.PP
Definition at line 303 of file msgque.h.
.SS "typedef signed char \fBMQ_BYT\fP"
.PP
1 byte \fBbyte\fP data-type 
.PP
Definition at line 243 of file msgque.h.
.SS "typedef \fBMQ_STRB\fP const* \fBMQ_CST\fP"
.PP
const string pointer data-type 
.PP
Definition at line 297 of file msgque.h.
.SS "typedef struct \fBMqS\fP* \fBMQ_CTX\fP"
.PP
Context pointer data-type. 
.PP
Definition at line 307 of file msgque.h.
.SS "typedef double \fBMQ_DBL\fP"
.PP
8 byte \fBdouble\fP data-type 
.PP
Definition at line 268 of file msgque.h.
.SS "typedef float \fBMQ_FLT\fP"
.PP
4 byte \fBfloat\fP data-type 
.PP
Definition at line 260 of file msgque.h.
.SS "typedef int \fBMQ_HDL\fP"
.PP
handle data-type 
.PP
Definition at line 281 of file msgque.h.
.SS "typedef int \fBMQ_INT\fP"
.PP
4 byte \fBinteger\fP data-type 
.PP
Definition at line 258 of file msgque.h.
.SS "typedef \fBMQ_LSTB\fP* \fBMQ_LST\fP"
.PP
list pointer data-type 
.PP
Definition at line 301 of file msgque.h.
.SS "typedef unsigned char \fBMQ_LSTB\fP"
.PP
list basic data-type 
.PP
Definition at line 290 of file msgque.h.
.SS "typedef \fBMQ_PTRB\fP* \fBMQ_PTR\fP"
.PP
generic pointer data-type 
.PP
Definition at line 293 of file msgque.h.
.SS "typedef void \fBMQ_PTRB\fP"
.PP
pointer basic data-type 
.PP
Definition at line 284 of file msgque.h.
.SS "typedef int \fBMQ_SIZE\fP"
.PP
array size data-type 
.PP
\fBAttention:\fP
.RS 4
-> need signed integer in pReadWord -> need int because of pSwapI in pReadHDR 
.RE
.PP

.PP
Definition at line 275 of file msgque.h.
.SS "typedef \fBMQ_INT\fP \fBMQ_SOCK\fP"
.PP
data type for a socket handle 
.PP
Definition at line 309 of file msgque.h.
.SS "typedef short \fBMQ_SRT\fP"
.PP
2 byte \fBshort\fP data-type 
.PP
Definition at line 256 of file msgque.h.
.SS "typedef \fBMQ_STRB\fP* \fBMQ_STR\fP"
.PP
string pointer data-type 
.PP
Definition at line 295 of file msgque.h.
.SS "typedef char \fBMQ_STRB\fP"
.PP
string basic data-type 
.PP
Definition at line 286 of file msgque.h.
.SS "typedef \fBMQ_WID\fP \fBMQ_TIME_T\fP"
.PP
OS wide MQ_TIME_T. 
.PP
Definition at line 278 of file msgque.h.
.SS "typedef long long int \fBMQ_WID\fP"
.PP
8 byte \fBwide\fP integer data-type 
.PP
Definition at line 265 of file msgque.h.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBMqWaitOnEventE\fP"
.PP
wait for an event? 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIMQ_WAIT_NO \fP\fP
just do the check 
.TP
\fB\fIMQ_WAIT_ONCE \fP\fP
wait for one new event 
.TP
\fB\fIMQ_WAIT_FOREVER \fP\fP
wait forever 
.PP
Definition at line 327 of file msgque.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for tclmsgque from the source code.
