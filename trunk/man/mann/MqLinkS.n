.TH "MqLinkS" n "1 Jan 2010" "Version 4.1" "tclmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MqLinkS \- object responsible to manage client/server link data  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <msgque.h>\fP
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "struct MqSendS * \fBsend\fP"
.br
.R "object for sending a Msgque packet "
.ti -1c
.RI "struct MqReadS * \fBread\fP"
.br
.R "object for reading a Msgque packet "
.ti -1c
.RI "struct MqIoS * \fBio\fP"
.br
.R "object for management of the 'socket' infrastructure "
.ti -1c
.RI "\fBMQ_BOL\fP \fBendian\fP"
.br
.R "a endian switch have to be done? (boolean: MQ_YES or MQ_NO) "
.ti -1c
.RI "\fBMQ_SIZE\fP \fBctxId\fP"
.br
.R "the ctxId of this \fBMqS\fP object "
.ti -1c
.RI "struct \fBMqS\fP * \fBctxIdP\fP"
.br
.R "the inital (first) context (home of the ctxIdA) "
.ti -1c
.RI "struct MqTokenS * \fBsrvT\fP"
.br
.R "identifer for the 'service' token handle "
.ti -1c
.RI "\fBMQ_BOL\fP \fBonExit\fP"
.br
.R "is allready an exit ongoing? "
.ti -1c
.RI "struct \fBMqS\fP * \fBexitctx\fP"
.br
.R "msgque object got and '_SHD' request (only used at the parent) "
.ti -1c
.RI "\fBMQ_BOL\fP \fBonCreate\fP"
.br
.R "is already an 'create' ongoing? "
.ti -1c
.RI "\fBMQ_BOL\fP \fBMqLinkDelete_LOCK\fP"
.br
.R "is already a 'delete' ongoing? "
.ti -1c
.RI "\fBMQ_BOL\fP \fBdeleteProtection\fP"
.br
.R "object in use -> delete is not allowed "
.ti -1c
.RI "\fBMQ_BOL\fP \fBonShutdown\fP"
.br
.R "is allready a 'shutdown' ongoing? "
.ti -1c
.RI "\fBMQ_BOL\fP \fBdoFactoryCleanup\fP"
.br
.R "was the context create by a 'Factory' "
.ti -1c
.RI "\fBMQ_BOL\fP \fBflagServerSetup\fP"
.br
.R "setup.ServerSetup.fFunc was called ? "
.ti -1c
.RI "struct MqCacheS * \fBreadCache\fP"
.br
.R "cache for MqReadS "
.ti -1c
.RI "\fBMQ_SIZE\fP \fBctxIdR\fP"
.br
.R "the largest currently used ctxId number "
.ti -1c
.RI "\fBMQ_SIZE\fP \fBctxIdZ\fP"
.br
.R "the size of the ctxIdA array "
.ti -1c
.RI "struct \fBMqS\fP ** \fBctxIdA\fP"
.br
.R "array of struct \fBMqLinkS\fP * pointer's "
.ti -1c
.RI "struct MqTransS * \fBtrans\fP"
.br
.R "link to the trans object "
.ti -1c
.RI "\fBMQ_HDL\fP \fB_trans\fP"
.br
.R "storage for the Transaktion object from the package header "
.ti -1c
.RI "struct pChildS * \fBchilds\fP"
.br
.R "linked list of childs "
.ti -1c
.RI "struct pChildS * \fBself\fP"
.br
.R "my own child storage "
.ti -1c
.RI "struct MqLinkSlaveS * \fBslave\fP"
.br
.R "link to the SLAVE object "
.ti -1c
.RI "\fBMQ_BOL\fP \fBisWORKER\fP"
.br
.R "is alfa[0] is 'WORKER' "
.in -1c
.SH "Detailed Description"
.PP 
object responsible to manage client/server link data 
.PP
Definition at line 900 of file msgque.h.
.SH "Field Documentation"
.PP 
.SS "\fBMQ_HDL\fP \fBMqLinkS::_trans\fP"
.PP
storage for the Transaktion object from the package header 
.PP
Definition at line 935 of file msgque.h.
.SS "struct pChildS* \fBMqLinkS::childs\fP\fC [read]\fP"
.PP
linked list of childs 
.PP
Definition at line 939 of file msgque.h.
.SS "\fBMQ_SIZE\fP \fBMqLinkS::ctxId\fP"
.PP
the ctxId of this \fBMqS\fP object 
.PP
Definition at line 911 of file msgque.h.
.SS "struct \fBMqS\fP** \fBMqLinkS::ctxIdA\fP\fC [read]\fP"
.PP
array of struct \fBMqLinkS\fP * pointer's 
.PP
Definition at line 931 of file msgque.h.
.SS "struct \fBMqS\fP* \fBMqLinkS::ctxIdP\fP\fC [read]\fP"
.PP
the inital (first) context (home of the ctxIdA) 
.PP
Definition at line 912 of file msgque.h.
.SS "\fBMQ_SIZE\fP \fBMqLinkS::ctxIdR\fP"
.PP
the largest currently used ctxId number 
.PP
Definition at line 929 of file msgque.h.
.SS "\fBMQ_SIZE\fP \fBMqLinkS::ctxIdZ\fP"
.PP
the size of the ctxIdA array 
.PP
Definition at line 930 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::deleteProtection\fP"
.PP
object in use -> delete is not allowed 
.PP
Definition at line 921 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::doFactoryCleanup\fP"
.PP
was the context create by a 'Factory' 
.PP
Definition at line 923 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::endian\fP"
.PP
a endian switch have to be done? (boolean: MQ_YES or MQ_NO) 
.PP
Definition at line 908 of file msgque.h.
.SS "struct \fBMqS\fP* \fBMqLinkS::exitctx\fP\fC [read]\fP"
.PP
msgque object got and '_SHD' request (only used at the parent) 
.PP
Definition at line 918 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::flagServerSetup\fP"
.PP
setup.ServerSetup.fFunc was called ? 
.PP
Definition at line 924 of file msgque.h.
.SS "struct MqIoS* \fBMqLinkS::io\fP\fC [read]\fP"
.PP
object for management of the 'socket' infrastructure 
.PP
Definition at line 905 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::isWORKER\fP"
.PP
is alfa[0] is 'WORKER' 
.PP
Definition at line 944 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::MqLinkDelete_LOCK\fP"
.PP
is already a 'delete' ongoing? 
.PP
Definition at line 920 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::onCreate\fP"
.PP
is already an 'create' ongoing? 
.PP
Definition at line 919 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::onExit\fP"
.PP
is allready an exit ongoing? 
.PP
Definition at line 917 of file msgque.h.
.SS "\fBMQ_BOL\fP \fBMqLinkS::onShutdown\fP"
.PP
is allready a 'shutdown' ongoing? 
.PP
Definition at line 922 of file msgque.h.
.SS "struct MqReadS* \fBMqLinkS::read\fP\fC [read]\fP"
.PP
object for reading a Msgque packet 
.PP
Definition at line 904 of file msgque.h.
.SS "struct MqCacheS* \fBMqLinkS::readCache\fP\fC [read]\fP"
.PP
cache for MqReadS 
.PP
Definition at line 926 of file msgque.h.
.SS "struct pChildS* \fBMqLinkS::self\fP\fC [read]\fP"
.PP
my own child storage 
.PP
Definition at line 940 of file msgque.h.
.SS "struct MqSendS* \fBMqLinkS::send\fP\fC [read]\fP"
.PP
object for sending a Msgque packet 
.PP
Definition at line 903 of file msgque.h.
.SS "struct MqLinkSlaveS* \fBMqLinkS::slave\fP\fC [read]\fP"
.PP
link to the SLAVE object 
.PP
Definition at line 943 of file msgque.h.
.SS "struct MqTokenS* \fBMqLinkS::srvT\fP\fC [read]\fP"
.PP
identifer for the 'service' token handle 
.PP
Definition at line 915 of file msgque.h.
.SS "struct MqTransS* \fBMqLinkS::trans\fP\fC [read]\fP"
.PP
link to the trans object 
.PP
Definition at line 934 of file msgque.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for tclmsgque from the source code.
