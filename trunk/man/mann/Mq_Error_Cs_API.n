.TH "Mq_Error_Cs_API" n "9 Nov 2010" "Version 4.7" "vbmsgque" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Mq_Error_Cs_API \- create and manage error messages.   

.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcsmsgque.MqSException\fP"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorS\fP "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorC\fP (string proc, int num, string message)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorC\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorSetCONTINUE\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorSetCONTINUE\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorSetEXIT\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorSetEXIT\fP "
.ti -1c
.RI "bool \fBcsmsgque::MqS.ErrorIsEXIT\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorIsEXIT\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorRaise\fP ()"
.br
.R "throw an \fBcsmsgque.MqSException\fP with the data from \fBMqErrorS\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorReset\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorReset\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorPrint\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorPrint\fP "
.ti -1c
.RI "int \fBcsmsgque::MqS.ErrorGetNum\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorGetNum\fP "
.ti -1c
.RI "string \fBcsmsgque::MqS.ErrorGetText\fP ()"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorGetText\fP "
.ti -1c
.RI "void \fBcsmsgque::MqS.ErrorSet\fP (Exception ex)"
.br
.R "implement the \fBlibmsgque\fP API object: \fBMqErrorSet\fP "
.in -1c
.SH "Detailed Description"
.PP 
create and manage error messages.  

the management is done with a \fBMqErrorS\fP object created by \fBMqContextCreate\fP. every \fBMqS\fP object is linked with only one \fBMqErrorS\fP object and every \fBMqErrorS\fP object is linked with only one \fBMqS\fP object. the \fBMqErrorS\fP object is used to collect all data needed to handle an error.  
.SH "Function Documentation"
.PP 
.SS "void csmsgque.MqS.ErrorC (string proc, int num, string message)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorC\fP 
.PP
Definition at line 111 of file error.cs.
.SS "int csmsgque.MqS.ErrorGetNum ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorGetNum\fP 
.PP
Definition at line 146 of file error.cs.
.SS "string csmsgque.MqS.ErrorGetText ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorGetText\fP 
.PP
Definition at line 151 of file error.cs.
.SS "bool csmsgque.MqS.ErrorIsEXIT ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorIsEXIT\fP 
.PP
Definition at line 126 of file error.cs.
.SS "void csmsgque.MqS.ErrorPrint ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorPrint\fP 
.PP
Definition at line 141 of file error.cs.
.SS "void csmsgque.MqS.ErrorRaise ()\fC [inherited]\fP"
.PP
throw an \fBcsmsgque.MqSException\fP with the data from \fBMqErrorS\fP 
.PP
Definition at line 131 of file error.cs.
.SS "void csmsgque.MqS.ErrorReset ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorReset\fP 
.PP
Definition at line 136 of file error.cs.
.SS "void csmsgque.MqS.ErrorSet (Exception ex)\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorSet\fP 
.PP
Definition at line 166 of file error.cs.
.SS "void csmsgque.MqS.ErrorSetCONTINUE ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorSetCONTINUE\fP 
.PP
Definition at line 116 of file error.cs.
.SS "void csmsgque.MqS.ErrorSetEXIT ()\fC [inherited]\fP"
.PP
implement the \fBlibmsgque\fP API object: \fBMqErrorSetEXIT\fP 
.PP
Definition at line 121 of file error.cs.
.SH "Author"
.PP 
Generated automatically by Doxygen for vbmsgque from the source code.
