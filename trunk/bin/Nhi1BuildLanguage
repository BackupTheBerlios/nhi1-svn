#!/bin/bash
#+
#:  \file       bin/Nhi1BuildLanguage
#:  \brief      \$Id$
#:  
#:  (C) 2013 - NHI - #1 - Project - Group
#:  
#:  \version    \$Rev$
#:  \author     EMail: aotto1968 at users.berlios.de
#:  \attention  this software has GPL permissions to copy
#:              please contact AUTHORS for additional information
#:

set -u

## =======================================================================
##
## Setup Environment 
##
##   performance ...
##
## =======================================================================

die() {
  echo "ERROR: $*"
  exit 1
}

pathExtension() {
  case "$1" in
    thread)					echo "test";;
    nothread)				echo "test/nothred";;
    performance-thread)	    echo ".";;
    performance-nothread)   echo "nothread";;
    *)						die "unknown pathExtension '$1'";;
  esac
}

##
## =======================================================================
##

NHI1_HOME=$(dirname $(dirname $(which $0)))

##  Retrieve environment data
declare -A lang
declare -A use

eval "$($NHI1_HOME/sbin/SetupEnv $0 "${@:-}" <<-EOF

G_Shell 'bash'
# ---------------------------------------------------------------------
G_Date='\$Date: 2013-01-25 11:52:58 +0000 (Fri, 25 Jan 2013) \$'
G_Revision='\$Revision: 593 \$'
G_Author='\$Author: aotto1968 \$'
G_Source='\$URL: svn+ssh://svn.berlios.de/svnroot/repos/nhi1/trunk/.OtConfig.bash \$'
# --------------------------------------------------------------------
G_Description='wrapper to setup the build-environment for the "nhi1-configure" script.'
# -------------------------------------------------------------------
G_Argument 'tool-root:NHI1_TOOL_ROOT:__environment__:root for the tools directory:E'
G_Argument 'clean:clean:0:cleanup first:B'
G_Argument 'jobs:Jobs:2:number of parallel build jobs:'
for l in tcl perl python ruby php ; do
  G_Argument "lang-\$l:lang[\$l]:0:build the '\$l' language:B"
done
for l in thread nothread performance-thread performance-nothread; do
  G_Argument "use-\$l:use[\$l]:0:build the '\$l' options:B"
done
G_Argument "use-all:useAll:0:build the 'all' options:B"
G_HelpText="this tool is used to build a set of programming-language interpreter
using different compiling-options and used for different test-cases.

The languages  supported: perl, python, php, ruby, tcl
The test-cases supported: (no)thread, (no)performance

This tool require a local directory called 'LNG-latest' as link to language
sources ready for compilation.
"
EOF
  )"

mkdir -p "$NHI1_TOOL_ROOT" || die "unable to create directory '$NHI1_TOOL_ROOT'"

# with '--use-all' det all "--use-*" targets to yes
if test "$useAll" = "yes" ; then
  for u in "${!use[@]}" ; do
	use[$u]="yes"
  done
fi

# how many "use" targets are defined?
declare -i usenum=0
for u in "${!use[@]}" ; do
  test "${use[$u]}" = "yes" && let usenum+=1
done

# minimum one target required
if (( usenum == 0 )) ; then
  die "spease specify at lest on of --thread, --nothread, --performance-thread or --performance-nothread"
fi

# multiple targets need a "--clean" because of reinstalling sme target again
if (( usenum > 1 )) ; then
  clean=yes
fi

for l in ${!lang[@]} ; do
  [[ ${lang[$l]} == 'no' ]] && continue

  case "$l" in
    perl)   buildScript=./Configure;;
    *)	    buildScript=./configure;;
  esac

  case "$l" in
    tcl)    buildDir=./unix;;
    *)	    buildDir=.;;
  esac

  for t in ${!use[@]} ; do
    [[ ${use[$t]} == 'no' ]] && continue
    prefix="$NHI1_TOOL_ROOT/$(pathExtension $t)" || die "invalid pathExtension '$t'"

    case "$l" in
      perl)
		case "$t" in
		  thread)		buildConf=(-Dusethreads -DEBUGGING=-g);;
		  nothread)		buildConf=(-DEBUGGING=-g);;
		  performance-thread)	buildConf=(-Dusethreads -DEBUGGING=none);;
		  performance-nothread)	buildConf=(-DEBUGGING=none);;
		esac
		buildConf+=(-des -Dprefix="$prefix")
      ;;
      python)
		case "$t" in
		  thread)		buildConf=(--with-threads);;
		  nothread)		buildConf=(--without-threads);;
		  performance-thread)	buildConf=(--with-threads);;
		  performance-nothread) buildConf=(--without-threads);;
		esac
		buildConf+=(--prefix="$prefix" --enable-shared)
      ;;
      php)
		case "$t" in
		  thread)		buildConf=(--enable-debug --with-tsrm-pthreads);;
		  nothread)		buildConf=(--enable-debug --without-tsrm-pthreads);;
		  performance-thread)	buildConf=(--with-tsrm-pthreads);;
		  performance-nothread) buildConf=(--without-tsrm-pthreads);;
		esac
		buildConf+=(--prefix="$prefix")
      ;;
      ruby)
		case "$t" in
		  thread)		buildConf=(--enable-debug-env --enable-pthread);;
		  nothread)		buildConf=(--enable-debug-env --disable-pthread);;
		  performance-thread)	buildConf=(--enable-pthread);;
		  performance-nothread) buildConf=(--disable-pthread);;
		esac
		buildConf+=(--prefix="$prefix" --enable-shared)
      ;;
      tcl)
		case "$t" in
		  thread)		buildConf=(--enable-symbols --enable-threads CPPFLAGS=-DTCL_COMPILE_DEBUG);;
		  nothread)		buildConf=(--enable-symbols --disable-threads CPPFLAGS=-DTCL_COMPILE_DEBUG);;
		  performance-thread)	buildConf=(--enable-threads);;
		  performance-nothread) buildConf=(--disable-threads);;
		esac
		buildConf+=(--prefix="$prefix")
      ;;
      *)
		die "invalid language $1"
      ;;
    esac

    (
      cd "$l-latest/$buildDir"
      if test "$clean" = "yes" ; then
		test -f Makefile && {
		  make distclean || die "unable to 'make distclean'"
		}
      fi
      if test ! -f Makefile ; then
		bash -norc "$buildScript" "${buildConf[@]}" "$@" || die "unable to configure"
      fi
      make -j $Jobs || die "unable to build"
      make install || die "unable to install"
    )

  done
done

exit 0

