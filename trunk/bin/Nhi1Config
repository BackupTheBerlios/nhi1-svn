#!/bin/bash
#+
#:  \file       bin/Nhi1Config
#:  \brief      \$Id$
#:  
#:  (C) 2013 - NHI - #1 - Project - Group
#:  
#:  \version    \$Rev$
#:  \author     EMail: aotto1968 at users.berlios.de
#:  \attention  this software has GPL permissions to copy
#:              please contact AUTHORS for additional information
#:

set -ue

## =======================================================================
##
## Setup Environment 
##
##   performance ...
##
## =======================================================================

## delete all environment variables to setup a "clean" build environment
[[ "${CLEAN:-}" != "yes" ]] && exec /usr/bin/env - \
  CLEAN="yes" TERM="$TERM" HOME="$HOME" MACHTYPE="$MACHTYPE" \
    CC="${CC:-}" CXX="${CXX:-}" CCACHE_DIR="${CCACHE_DIR:-}" \
      PKG_CONFIG_PATH="${PKG_CONFIG_PATH:-}" \
	NHI1_TOOL_ROOT="${NHI1_TOOL_ROOT:-$HOME/ext/$MACHTYPE}" "$0" "$@"

## some useful procs
add2var() {
  (($# != 2)) && {
    echo "usage: $0 VAR Add1:Add2:..."
    echo "using arguments: $@"
    return 1
  }
  IFS=:
  local var=$1;
  local add=$2;
  typeset -i i
  declare -a array
## set array arguments
  array=(${!var})
## cleanup array
  for a in $add ; do
    for (( i=0 ; i<${#array[*]} ; i+=1 )) ; do
      [ "$a" == "${array[$i]}" ] && unset array[$i]
    done
    i=0;
  done
## set the new global variable
  eval export $var=\"\$add\${array[*]:+:}\${array[*]:-}\"
  unset IFS
}
export -f add2var

Usage() {
  exec $NHI1_HOME/configure --help
}

pathExtension() {
  case "$1" in
    thread)                 echo "test";;
    nothread)               echo "test/nothred";;
    performance-thread)     echo ".";;
    performance-nothread)   echo "nothread";;
    *)                      
      echo "ERROR: unknown pathExtension '$1'"
      exit 1
    ;;
  esac
}

##
## =======================================================================
##

export PATH=/bin:/usr/bin
export LD_LIBRARY_PATH=

NHI1_HOME=$(dirname $(dirname $(readlink -f $0)))

##  Retrieve environment data
declare -A with
declare -A enable
declare -a opt

eval "$($NHI1_HOME/sbin/SetupEnv $0 "${@:-}" <<-'EOF'

G_Shell 'bash'
# ---------------------------------------------------------------------
G_Date='$Date$'
G_Revision='$Revision$'
G_Author='$Author: aotto1968 $'
G_Source='$URL: svn+ssh://svn.berlios.de/svnroot/repos/nhi1/trunk/bin/Nhi1Config $'
# --------------------------------------------------------------------
G_Description='wrapper to setup the build-environment for the "nhi1-configure" script.'
G_HelpProc='Usage'
# -------------------------------------------------------------------
G_Option local-data-file default
G_Argument 'tool-root:NHI1_TOOL_ROOT:__environment__:root for the tools directory:E'
G_Argument 'use-perf:Perf:0:use performance code:B'
G_Argument 'use-threads:Thread:0:use thread code:B'
for l in brain guard ; do
  G_Argument "$l:enable[$l]:disable:add '$l' feature support:D:enable:disable"
done
for l in cxx tcl perl python php ruby java csharp vb go ; do
  G_Argument "$l:with[$l]:without:add '$l' language support:DY:with:without"
done

EOF
  )"

for l in ${!with[@]} ; do
  (( ${with[$l]} )) && opt+=(--with-$l)
done

for l in ${!enable[@]} ; do
  (( ${enable[$l]} )) && opt+=(--enable-$l)
done

if (( $Perf )) ; then
  opt+=(--enable-static)
  if (( $Thread )) ; then
    T=$(pathExtension performance-thread)
    opt+=(--enable-threads)
  else
    T=$(pathExtension performance-nothread)
  fi
else
  if (( $Thread )) ; then
    T=$(pathExtension thread)
    opt+=(--enable-threads --enable-symbols)
  else
    T=$(pathExtension nothread)
    opt+=(--enable-symbols)
  fi
fi

add2var PATH		  $NHI1_TOOL_ROOT/$T/bin
add2var LD_LIBRARY_PATH   $NHI1_TOOL_ROOT/$T/lib
add2var PKG_CONFIG_PATH   $NHI1_TOOL_ROOT/$T/lib/pkgconfig

[[ ${with[go]} == "1" && -f /etc/profile.d/go.sh ]] && {
  source /etc/profile.d/go.sh
}
[[ ${with[java]} == "1" && -f /etc/profile.d/alljava.sh ]] && {
  source /etc/profile.d/alljava.sh
}

rm -fr /tmp/libmsgque-install

bash -norc $NHI1_HOME/configure --prefix=/tmp/libmsgque-install "${opt[@]}" "${@:-}"

#		    --enable-cxx \
#		    --enable-java \
#		    --enable-csharp \
#		    --enable-go \
#		    --enable-ruby \
#		    --enable-python \
#		    --enable-perl \
#		    --enable-php \

#		    --enable-brain \
#		    --enable-guard \
#		    --enable-tcl \
#		    --enable-ruby \
#		    --enable-cxx \
#		    --enable-java \
#		    --enable-go \
#		    --enable-csharp \
#		    --enable-python \
#		    --enable-perl \
#		    --enable-php \
#		    --enable-vb \
#		    --enable-static \
