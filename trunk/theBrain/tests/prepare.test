#+
#:  \file       theBrain/tests/brain.test
#:  \brief      \$Id: brain.test 619 2013-03-06 16:00:51Z aotto1968 $
#:  
#:  (C) 2002 - NHI - #1 - Project - Group
#:  
#:  \version    \$Rev: 619 $
#:  \author     EMail: aotto1968 at users.berlios.de
#:  \attention  this software has GPL permissions to copy
#:              please contact AUTHORS for additional information
#:

set TS_SCRIPT [info script]
source [file join [file dirname [info script]] libbrain.tcl]
if {![testConstraint brain]} return

##
## -----------------------------------------------------------------------
## init
##

#set tcl_traceExec 1

array set SQL {
  testtbl   "CREATE TABLE IF NOT EXISTS testtbl (id INTEGER PRIMARY KEY, dval double, tval TEXT);"
  droptbl   "DROP TABLE IF EXISTS testtble;"
  doupltbl  "CREATE TABLE testtbl (id INTEGER PRIMARY KEY, dval double, tval TEXT);"
  simptbl   "CREATE TABLE IF NOT EXISTS simptbl (id INTEGER PRIMARY KEY);"
  errtbl    "CREATE TOBLE IF NOT EXISTS errtbl  (id INTEGER PRIMARY KEY, dval double, tval TEXT);"

  testins   "/* in:IDC */ INSERT INTO testtbl (id, dval, tval) VALUES (?, ?, ?);"

  testsel   "/* in:I out:DC  */ SELECT dval, tval FROM testtbl WHERE id < ?;"
}

##
## -----------------------------------------------------------------------
## Master/Child + Binary yes/no
##

# 1,2, ... tclmsgque (parent/child)
 foreach I [getNum 3] {

 # transport-type: string or binary
  foreach B [filter BIN_LST binary] {

  # socket-type: pipe, uds or tcp
   foreach C [getEnv COM_LST] {

    # server-type: server server.tcl
    foreach S [filter SRV_LST $C] {

##
## -----------------------------------------------------------------------
## database
##

# startup binary --------------------------
Setup $I $B $C $S

      foreach dbfile [list mem] {
Echo0 $FH_LAST OPEN SendC $DB_LST($dbfile)

# tests ----------------------------

test prepare-1-($I|$B|$C|$S|$dbfile) {prepare statement for insert} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
    } \
    -body           {
      Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    ok \
    -result	    {0}

test prepare-2-($I|$B|$C|$S|$dbfile) {prepare duplicate statement} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
    } \
    -body           {
      EchoL $FH_LAST PREP SendC $SQL(testins)$SQL(testsel)
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    ok \
    -result	    {0 1}

test prepare-3-($I|$B|$C|$S|$dbfile) {prepare statement and insert} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
    } \
    -body           {
      Echo0 $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    ok \
    -result	    {}

test prepare-4-($I|$B|$C|$S|$dbfile) {prepare statement and insert multiple rows} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
    } \
    -body           {
      Echo0 $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto1
      Echo0 $FH_LAST STEP SendI $hdl SendI 2 SendD 0.4 SendC otto2
      Echo0 $FH_LAST STEP SendI $hdl SendI 3 SendD 0.5 SendC otto3
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    ok \
    -result	    {}

test prepare-4-e1-($I|$B|$C|$S|$dbfile) {prepare statement and insert with duplicate row} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
    } \
    -body           {
      Echo0 $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto1
      Echo0 $FH_LAST STEP SendI $hdl SendI 2 SendD 0.4 SendC otto2
      Echo0 $FH_LAST STEP SendI $hdl SendI 1 SendD 0.5 SendC otto3
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    error \
    -result	    {C> (client-0) [service-call-error] <Tok|STEP> <Num|19>
S> (server-0) [STEP] PRIMARY KEY must be unique}

test prepare-5-($I|$B|$C|$S|$dbfile) {select gingle row from table} \
    -setup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
      EchoL $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto
      EchoL $FH_LAST STEP SendI $hdl SendI 2 SendD 0.4 SendC otto2
      EchoL $FH_LAST STEP SendI $hdl SendI 3 SendD 0.5 SendC otto3
      set shdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testsel)]
    } \
    -body           {
      EchoL $FH_LAST STEP SendI $shdl SendI 2
    } \
    -cleanup	    {
      Echo0 $FH_LAST EXEC SendC $SQL(droptbl)
    } \
    -returnCodes    ok \
    -result	    {{0.3 otto}}

test brain-3-o4b-($I|$B|$C|$S|$dbfile) {select multiple columns from table} \
    -setup	    {
      Echo0 $FH_LAST OPEN SendC $DB_LST($dbfile)
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
      EchoL $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto
      EchoL $FH_LAST STEP SendI $hdl SendI 2 SendD 0.4 SendC otto2
      EchoL $FH_LAST STEP SendI $hdl SendI 3 SendD 0.5 SendC otto3
      set shdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testsel)]
    } \
    -body           {
      EchoL $FH_LAST STEP SendI $shdl SendC SendI 3
    } \
    -cleanup	    {
      Echo0 $FH_LAST CLOS
    } \
    -returnCodes    ok \
    -result	    {{0.3 otto} {0.4 otto2}}

test brain-3-o5-($I|$B|$C|$S|$dbfile) {finalize} \
    -setup	    {
      Echo0 $FH_LAST OPEN SendC $DB_LST($dbfile)
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
    } \
    -body           {
      Echo0 $FH_LAST FINA SendI $hdl
    } \
    -cleanup	    {
      Echo0 $FH_LAST CLOS
    } \
    -returnCodes    ok \
    -result	    {}

test brain-3-e5-($I|$B|$C|$S|$dbfile) {insert after finalize} \
    -setup	    {
      Echo0 $FH_LAST OPEN SendC $DB_LST($dbfile)
      Echo0 $FH_LAST EXEC SendC $SQL(testtbl)
      set hdl [Echo1 $FH_LAST PREP ReadI SendC $SQL(testins)]
      Echo0 $FH_LAST FINA SendI $hdl
    } \
    -body           {
      EchoL $FH_LAST STEP SendI $hdl SendI 1 SendD 0.3 SendC otto
    } \
    -cleanup	    {
      Echo0 $FH_LAST CLOS
    } \
    -returnCodes    error \
    -result	    {C> (client-0) [service-call-error] <Tok|STEP> <Num|1>
S> (server-0) [HdlGet] the prepare-index '0' was NOT defined
S> (server-0) found in function "HdlGet" at file "abrain.c"}


# cleanup ---------------------------

Echo0 $FH_LAST CLOS
      } ; # dbfile

Cleanup

##  
## -----------------------------------------------------------------------
## finish loop
##
   
    }; # SRV_LST
   }; # COM_LST
  }; # BIN_LST
 }; # Master/Child  
unset -nocomplain I B C S

##
## -----------------------------------------------------------------------
## finish
##

freeTests

