#!/bin/bash -u
#+
#:  \file       tests/TestControl.bash
#:  \brief      \$Id$
#:  
#:  (C) 2013 - NHI - #1 - Project - Group
#:  
#:  \version    \$Rev$
#:  \author     EMail: aotto1968 at users.berlios.de
#:  \attention  this software has GPL permissions to copy
#:              please contact AUTHORS for additional information
#:

#
# The goal ist to make an complete-as-possible testsycle
#

. '@abs_top_builddir@/env.sh'

##
## =========================================================================
## Command-Line
##

eval "$($abs_top_srcdir/sbin/SetupEnv "$0" "$@" <<-'EOF'
G_Shell 'bash'
# ---------------------------------------------------------------------
G_Date='$Date$'
G_Revision='$Revision$'
G_Author='$Author: aotto1968 $'
G_Source='$URL: svn+ssh://svn.berlios.de/svnroot/repos/nhi1/trunk/bin/Nhi1Config $'
# --------------------------------------------------------------------
G_Description='frontend to the mass distribution test'
#G_HelpProc='Usage'
# -------------------------------------------------------------------
G_Option error-on-non-option
G_Argument 'action:action::choose action:L:analyze:test:clean'
G_Argument 'only:only:*:restrict language to:L:*:c:cxx:tcl:perl:python:php:ruby:java:csharp:go'
EOF
  )"

case $action in
  clean)
    rm -f distcheck.*.log
    for f in ../test-* ; do
      test ! -d $f && continue
      chmod -R u+w $f
      rm -fr $f
    done
  ;;
  test)
    export PATH="/usr/local/bin:$PATH"

    # use distribution
    dist="$abs_top_builddir/$PACKAGE-$PACKAGE_VERSION.tar.bz2"

    # test cases

    declare -A threadsLng=( \
      [yes]="c cxx tcl perl python php ruby java csharp go" \
      [no]="c cxx tcl perl python php ruby" \
    )
    declare -A staticLng=( \
      [yes]="c cxx" \
      [no]="c cxx tcl perl python php ruby java csharp go" \
    )
    declare -a tests
    declare -a flags
    declare -i num=0
    declare -i port=5000

    rm -f distcheck.*.log

    # DISTCHECK_CONFIGURE_FLAGS=--with-guard TESTS_ENVIRONMENT="/home/dev01/Project/NHI1/bin/Nhi1Exec --testing --only-c"

    for threads in yes no ; do
      for static in yes no; do
	for threadsL in ${threadsLng[$threads]} ; do
	  for staticL in ${staticLng[$static]} ; do
	    if [[ "$threadsL" == "$staticL" && "$threadsL" == $only ]] ; then
	      tests=($abs_top_srcdir/bin/Nhi1Exec --only-$threadsL --port $((port++)))
	      flags=(--enable-threads=$threads --enable-static=$static)
	      test "$threadsL" != "c" && flags+=(--with-$staticL=yes)
	      echo "run job $num: ${flags[*]}"
	      IFS=',' ; sem --id "$$" -j100% "$abs_top_srcdir/tests/TestJob.bash" $num $PACKAGE_VERSION "${flags[*]}" "${tests[*]}" ; unset IFS
	      (( num+=1 ))
	    fi
	  done
	done
      done
    done

    sem --id "$$" --wait
  ;;
  analyze)
    for f in ./distcheck.*.log ; do
      case "$only" in
	"*")  PAT=".*"	  ;;
	*)    PAT="--only-$only" ;;
      esac
      test ! -e $f && continue
      awk -v LNG="$PAT" -F '@@@@' 'NR == 1 && $0 ~ LNG {exit 1}' $f && continue
      echo -e "\n\n\ntest '$f' failed"
      echo "====================================================="
      head -2 $f
      echo "tail -10..."
      tail -10 $f
      echo "Failed..."
      egrep "Failed\s+[1-9]" $f
      echo;echo
      awk -F "@@@@@@@@@" '
	BEGIN {
	  flag=0
	}
	/---- errorInfo.*TIMEOUT/ {
	  flag = 2
	  next
	}
	/FAILED/ {
	  if (flag == 0) {
	    flag = 1
	    len = 0
	    delete lst
	  } else if (flag == 1) {
	    flag = 0
	    for (n=0;n<=len;n++) {
	      print(lst[n])
	    }
	    print
	    print ""
	    print ""
	    next
	  } else if (flag == 2) {
	    flag = 0
	    print(lst[0])
	    print("TIMEOUT")
	    print
	    print ""
	    print ""
	    next
	  }
	}
	flag == 1 {
	  lst[len++] = $1
	}
      ' $f
      echo "File errors..."
      grep -A 10 "Test files exiting with errors" $f
    done
  ;;
esac

exit 0

